{"version":3,"sources":["store/MyContext.js","firebase/firebase.js","components/UI/Spinner/Spinner.js","components/layouts/getImageURL/getImageURL.js","components/layouts/left/LeftPane.js","components/layouts/right/Home.js","components/layouts/right/AboutMe.js","components/layouts/right/Educ/Education.js","components/layouts/right/Educ/Experience.js","components/layouts/right/Educ/Skills.js","components/layouts/right/EduExpSkill.js","components/layouts/right/Portfolio.js","components/layouts/right/Links.js","components/layouts/right/ContactMe.js","components/Error.js","Main.js","components/admin/login/login.js","components/admin/data_entry/button/button.js","components/admin/data_entry/form-input/form-input.js","components/admin/data_entry/data_list/edit_modal.js","components/admin/data_entry/data_list/show_model.js","components/admin/data_entry/data_list/data_list.js","components/admin/data_entry/showMessageModal/showMessageModal.js","components/admin/data_entry/data_entry.js","components/admin/admin.js","store/GlobalStore.js","App.js","index.js","components/UI/Spinner/Spinner.module.css","components/layouts/right/thumb.png"],"names":["myContext","createContext","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","storage","firestore","database","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","spinner","className","classes","Loader","GetImageURL","customUrl","urlName","useState","imgUrl","setImgUrl","docUrl","setDocUrl","loading","setLoading","docType","split","pop","toLowerCase","ref","child","getDownloadURL","then","url","style","border","href","target","rel","download","icon","faDownload","Spinner","src","alt","Fragment","LeftPane","Personal","useContext","MyContext","Object","keys","map","item","id","key","padding","backgroundColor","image","thumb","latestTech","Home","firstName","toUpperCase","designation","to","faUser","resume","AboutMe","boxShadow","width","margin","summary","phone","lastName","address","birthDate","email","nationality","speakingLanguages","blogUrl","marginBottom","color","faBlog","Education","overflow","faGraduationCap","paddingBottom","degree","course","faCalendar","passYear","university","Experience","faTasks","company","duration","faCogs","technology","Skills","maxHeight","faStar","boxSizing","align","subject","stars","EduExpSkill","match","path","exact","component","Portfolio","props","onOpenModal","setState","toggleModal","selectModal","onCloseModal","state","Consumer","context","height","paddingTop","projectName","client","faClock","textAlign","onClick","Modal","isOpen","toggle","top","transform","ModalHeader","ModalBody","description","ModalFooter","siteUrl","Component","Links","faLink","ContactMe","handleChange","e","name","value","err","length","errorMessage","handleSubmit","preventDefault","username","message","refmsg","current","focus","tooltipOpen","refuser","refemail","refsub","urls","elements","fetch","method","mode","headers","body","JSON","stringify","res","status","Swal","fire","React","createRef","setInterval","success","this","faEnvelopeOpen","background","onSubmit","cols","rows","maxLength","placeholder","title","onChange","type","marginRight","required","faMapMarkerAlt","faMobileAlt","Error","Main","faHome","faBriefcase","CardColor","CardhColor","borderBottom","Login","error","display","Button","onclick","FormInput","str","join","slice","modifiedStr","charAt","types","input","label","EditModal","record","modal","imageName","resumeName","files","dynamicDate","Date","getTime","category","editKey","imgKey","inputs","document","querySelectorAll","valid","i","put","delete","html","timerProgressBar","onBeforeOpen","showLoading","update","close","singleData","editItem","toString","borderBottomColor","entries","borderTopColor","ShowModel","handleDelete","imgData","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","console","log","remove","handleEdit","DataImage","toggleEdit","itemKey","data","alert","colSpan","SortedFields","it","DataList","handleShow","fetch_data","Promise","all","json","ShowMessageModal","messages","showMessages","showMessageModal","hideMessageModal","DataEntry","abortController","AbortController","prevState","reset","getElementById","resetAll","items","sectionName","ObjOfState","signal","abort","currentUser","signOut","carousel","FormFields","slidePrev","slideNext","formfield","Admin","handleFields","event","a","password","signInWithEmailAndPassword","unsubscribeFromAuth","onAuthStateChanged","user","GlobalStore","bind","Provider","children","App","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.8b23a0a6.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nconst myContext = createContext();\r\n\r\nexport default myContext;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\nimport 'firebase/database'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDyK-vS9oiCEIZ3xdau8O1SfPoXpTxmy_U\",\r\n    authDomain: \"react-porfolio.firebaseapp.com\",\r\n    databaseURL: \"https://react-porfolio.firebaseio.com\",\r\n    projectId: \"react-porfolio\",\r\n    storageBucket: \"react-porfolio.appspot.com\",\r\n    messagingSenderId: \"402733075989\",\r\n    appId: \"1:402733075989:web:a38171fd1b9e7d3771881c\",\r\n    measurementId: \"G-D4YKFYR3WD\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth()\r\n\r\nexport const firestore = firebase.firestore()\r\n\r\nexport const storage = firebase.storage()\r\n\r\nexport const database = firebase.database()\r\n\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt: 'select_account' })\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase;","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import { storage } from '../../../firebase/firebase'\r\nimport React, { useState } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\n\r\nconst GetImageURL = ({ urlName }) => {\r\n    const [imgUrl, setImgUrl] = useState('')\r\n    const [docUrl, setDocUrl] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    var customUrl;\r\n    const docType = urlName.split('.').pop().toLowerCase()\r\n    if (docType === 'pdf' || docType === 'doc') {\r\n        storage.ref('resumes').child(urlName).getDownloadURL().then(url => {\r\n            setDocUrl(url)\r\n        })\r\n        customUrl = <a className=\"btn btn1\" style={{ border: \"1px solid #fff\" }}\r\n            href={docUrl} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n            <FontAwesomeIcon icon={faDownload} />{' '}My Resume</a>\r\n    }\r\n    if (docType === 'jpg' || docType === 'png' || docType === 'jpeg') {\r\n        storage.ref('images').child(urlName).getDownloadURL().then(url => {\r\n            setImgUrl(url)\r\n            setLoading(false)\r\n        })\r\n        customUrl =\r\n            loading ? <Spinner /> : <img src={imgUrl} alt=\"no pics\" className=\"rounded img-fluid\" />\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {customUrl ? customUrl : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GetImageURL;\r\n\r\n","import React, { useContext } from 'react'\r\nimport MyContext from '../../../store/MyContext'\r\nimport GetImageURL from '../getImageURL/getImageURL'\r\nimport thumb from '../right/thumb.png'\r\n\r\nconst LeftPane = () => {\r\n    const { Personal } = useContext(MyContext)\r\n    return (\r\n        <React.Fragment>\r\n            {(Personal) ? Object.keys(Personal).map((item, id) => (\r\n                <span key={id}>\r\n                    <div className=\"card\" style={{ border: 'unset' }}>\r\n                        <div className=\"card-header\" style={{ padding: 'unset', border: 'unset', backgroundColor: '#e9ecef' }}>\r\n                            <div className=\"leftPane-div\">\r\n                                {Personal[item].image\r\n                                    ? <GetImageURL urlName={Personal[item].image} />\r\n                                    : <img src={thumb} alt=\"no pics\" className=\"rounded img-fluid\" />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card current\">\r\n                        <div className=\"card-header\">{Personal[item].latestTech}</div>\r\n                    </div>\r\n                </span>\r\n            )) : <div className=\"card\">Record Not Available</div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LeftPane;","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../store/MyContext'\r\nimport GetImageURL from '../getImageURL/getImageURL'\r\n\r\nconst Home = () => {\r\n    const { Personal } = useContext(MyContext)\r\n    return (\r\n        <React.Fragment>\r\n            {Personal ? Object.keys(Personal).map(item => (\r\n                <div key={item} className=\"home\">\r\n                    <h2> Hi ! I'M {Personal[item].firstName.toUpperCase()}</h2>\r\n                    <br />\r\n                    <h4> I'M {Personal[item].designation}</h4>\r\n                    <br />\r\n                    <Link to=\"/about\" className=\"btn btn1\" style={{ border: \"1px solid #fff\" }}>\r\n                        <FontAwesomeIcon icon={faUser} />{' '}About Me</Link>{' '}\r\n                    <GetImageURL urlName={Personal[item].resume} />\r\n                </div>\r\n            )) : <div className=\"home\">Record Not Available</div>}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBlog, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../store/MyContext'\r\n\r\nconst AboutMe = () => {\r\n    const { Personal } = useContext(MyContext)\r\n    return (\r\n        <React.Fragment >\r\n            {(Personal) ? Object.keys(Personal).map(item => (\r\n                <div key={item} className=\"card about ab\" style={{ boxShadow: \"0 5px 11px #ccc\" }}>\r\n                    <h1>\r\n                        ABOUT <span>ME</span>\r\n                    </h1>\r\n                    <hr style={{ width: \"150px\", margin: \"0 auto\" }} /><br />\r\n                    <h4><FontAwesomeIcon icon={faUser} />&nbsp;PERSONAL INFO</h4>\r\n                    <p> {Personal[item].summary} </p>\r\n                    <table className=\"table table-responsive\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p>\r\n                                        <b> First Name:</b> {Personal[item].firstName}\r\n                                    </p>\r\n                                </td>\r\n                                <td>\r\n                                    <p>\r\n                                        <b> Phone Number:</b> {Personal[item].phone}\r\n                                    </p>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p>\r\n                                        <b> Last Name:</b> {Personal[item].lastName}\r\n                                    </p>\r\n                                </td>\r\n                                <td>\r\n                                    <p>\r\n                                        <b> Address:</b> {Personal[item].address}\r\n                                    </p>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p>\r\n                                        <b>Date of Birth:</b> {Personal[item].birthDate}\r\n                                    </p>\r\n                                </td>\r\n                                <td>\r\n                                    <p>\r\n                                        <b> Email:</b> {Personal[item].email}\r\n                                    </p>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p>\r\n                                        <b> Nationality:</b> {Personal[item].nationality}\r\n                                    </p>\r\n                                </td>\r\n                                <td>\r\n                                    <p>\r\n                                        <b> Spoken Languages:</b> {Personal[item].speakingLanguages}\r\n                                    </p>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <div className=\"about-btn\">\r\n                        <a className=\"btn  btn1\" href={Personal[item].blogUrl}\r\n                            style={{ padding: \"6px 15px\", marginBottom: \"-5px\", backgroundColor: 'black', color: '#fff' }}>\r\n                            <FontAwesomeIcon icon={faBlog} />&nbsp;My Blog </a>\r\n                    </div>\r\n                    <br />\r\n                </div>\r\n            )) : <div className=\"card about ab\">Record Not Available</div>}\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\nexport default AboutMe\r\n\r\n","import React, { useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGraduationCap, faCalendar } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../../store/MyContext'\r\n\r\nconst Education = () => {\r\n    const { Education } = useContext(MyContext)\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"education\">\r\n                <div className=\"card\" style={{ boxShadow: \"0 5px 11px #ccc\", overflow: 'auto' }}>\r\n                    <div className=\"card-header\"><FontAwesomeIcon icon={faGraduationCap} />{' '}EDUCATION</div>\r\n                    <span>\r\n                        {(Education) ? Object.keys(Education).map((item, id) =>\r\n                            <div key={id} className=\"card-body\" style={{ paddingBottom: \"0\" }}>\r\n                                <div className=\"header1\">\r\n                                    <h6><span>{Education[item].degree.toUpperCase()} </span>- {Education[item].course.toUpperCase()}</h6>\r\n                                    <p><FontAwesomeIcon icon={faCalendar} />{' '}{Education[item].passYear}</p>\r\n                                        Completed my {Education[item].degree}  from {' '}\r\n                                    <h6>{Education[item].university}</h6>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                        ) : <div className=\"card-body\">Record Not Available</div>}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Education;\r\n\r\n","import React, { useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTasks, faCalendar, faCogs } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../../store/MyContext'\r\n\r\nconst Experience = () => {\r\n    const { Experience } = useContext(MyContext)\r\n    return (\r\n        <div className=\"experience\" >\r\n            <div className=\"card\" style={{ boxShadow: \"0 5px 11px #ccc\", overflow: 'auto' }}>\r\n                <div className=\"card-header\">\r\n                    <FontAwesomeIcon icon={faTasks} />{' '}EXPERIENCE</div>\r\n                {(Experience) ? Object.keys(Experience).map((item, id) => (\r\n                    <div key={id} className=\"card-body\" style={{ paddingBottom: 0 }}>\r\n                        <div className=\"header1\">\r\n                            <h6><span>{Experience[item].designation} </span>- {Experience[item].company}</h6>\r\n                            <p><FontAwesomeIcon icon={faCalendar} />{'  '}{Experience[item].duration}</p>\r\n                            <p><FontAwesomeIcon icon={faCogs} /> {'  '}{Experience[item].technology}</p>\r\n                            <p>{Experience[item].summary}</p>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                )) : <div className=\"card-body\">Record Not Available</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Experience\r\n\r\n\r\n\r\n","import React, { useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../../store/MyContext'\r\n\r\nconst Skills = () => {\r\n    const { Skills } = useContext(MyContext)\r\n    return (\r\n        <div className=\"skills\" style={{ boxShadow: \"0 5px 11px #ccc\", maxHeight: '75vh', overflow: 'auto' }}>\r\n            <div className=\"card\" style={{ overflow: 'auto' }}>\r\n                <div className=\"card-header\"><FontAwesomeIcon icon={faStar} />{' '}SKILLS</div>\r\n                <div className=\"card-body\">\r\n                    <table className=\"table\">\r\n                        <tbody className=\"row\">\r\n                            {(Skills) ? Object.keys(Skills).map((item, id) => (\r\n                                <tr key={id} className=\"col-6 card\" style={{ boxSizing: \"border-box\", boxShadow: \"0px 1px 7px 2px #ccc\" }}>\r\n                                    <td align=\"center\">\r\n                                        <h6 >{Skills[item].subject}</h6>\r\n                                        <p>{Skills[item].stars}</p>\r\n                                    </td>\r\n                                </tr>\r\n                            )) : <div className=\"col-6 card\">Record Not Available</div>}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Skills;\r\n\r\n","import React from 'react'\r\nimport { NavLink, HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGraduationCap, faTasks, faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport Education from './Educ/Education'\r\nimport Experience from './Educ/Experience'\r\nimport Skills from './Educ/Skills'\r\n\r\nconst EduExpSkill = ({ match }) => (\r\n    <Router>\r\n        <div className=\"edu-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3 col-md-3 col-sm-12 col-xs-12 edu-left\">\r\n                    <div className=\"buttons\">\r\n                        <NavLink to={`${match.path}`} exact className=\" btn edu-btn edu-bt1\">\r\n                            <FontAwesomeIcon icon={faGraduationCap} />&nbsp;EDUCATION </NavLink>\r\n                        <NavLink to={`${match.path}/experience`} exact className=\"btn edu-btn edu-bt2\">\r\n                            <FontAwesomeIcon icon={faTasks} />&nbsp;EXPERIENCE</NavLink>\r\n                        <NavLink to={`${match.path}/skills`} exact className=\"btn edu-btn edu-bt3\">\r\n                            <FontAwesomeIcon icon={faStar} />&nbsp;SKILLS</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-9 col-md-9 col-sm-12 col-xs-12\">\r\n                    <div className=\"can-education\">\r\n                        <Switch>\r\n                            <Route exact path={`${match.path}`} component={Education} />\r\n\r\n                            <Route exact path={`${match.path}/experience`} component={Experience} />\r\n\r\n                            <Route exact path={`${match.path}/skills`} component={Skills} />\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Router>\r\n)\r\n\r\nexport default EduExpSkill;\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faClock, faCogs } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport MyContext from '../../../store/MyContext'\r\nimport GetImageURL from '../getImageURL/getImageURL'\r\n\r\nexport default class Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            toggleModal: false,\r\n            selectModal: null,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    onOpenModal = id => {\r\n        this.setState({\r\n            toggleModal: true,\r\n            selectModal: id\r\n        })\r\n    }\r\n\r\n    onCloseModal = () => {\r\n        this.setState({\r\n            toggleModal: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <MyContext.Consumer>\r\n                {context => {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <div className=\"about\" style={{ overflow: \"auto\", backgroundColor: 'transparent', height: '81vh' }} >\r\n                                <h1>\r\n                                    MY{' '}<span>PORTFOLIO</span>\r\n                                </h1>\r\n                                <hr style={{ width: \"200px\" }} />\r\n                                {(context.Portfolio) ? Object.keys(context.Portfolio).map((item, id) => (\r\n                                    <div key={id} className=\"card\" style={{ marginBottom: \"15px\", boxShadow: \"0 5px 11px #ccc\" }}>\r\n                                        <div className=\"card-header\" style={{ paddingBottom: 0, paddingTop: \"5px\" }}>\r\n                                            <h5>{context.Portfolio[item].projectName}</h5>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-6 col-md-6\">\r\n                                                    <div className=\"project-img\">\r\n                                                        <GetImageURL urlName={context.Portfolio[item].image} />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-6 col-md-6\">\r\n                                                    <table>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <p>\r\n                                                                        <FontAwesomeIcon icon={faUser} />&nbsp;<b>Client: {context.Portfolio[item].client}</b>\r\n                                                                    </p>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <p>\r\n                                                                        <FontAwesomeIcon icon={faClock} /><b> Duration: {context.Portfolio[item].duration}</b>\r\n                                                                    </p>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <p>\r\n                                                                        <FontAwesomeIcon icon={faCogs} /><b> Technologies: {context.Portfolio[item].technology}</b>\r\n                                                                    </p>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>\r\n                                                                    <div className=\"port-btn\" style={{ textAlign: \"right\" }}>\r\n                                                                        <Button className=\"btn btn1\" onClick={() => this.onOpenModal(id)} style={{ backgroundColor: \"#000\", color: '#fff' }} >Preview</Button>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <Modal isOpen={this.state.selectModal === id && this.state.toggleModal}\r\n                                            toggle={this.toggleModal} style={{ top: \"30%\", transform: \"translate(0%, -5%)\" }}>\r\n                                            <ModalHeader className=\"justify-content-center\"\r\n                                                style={{ backgroundColor: '#dee2e6' }}\r\n                                                toggle={this.toggleModal}>{context.Portfolio[item].projectName}\r\n                                            </ModalHeader>\r\n                                            <ModalBody style={{ backgroundColor: '#dee2e6' }}>\r\n                                                <h5>Project Description: </h5>\r\n                                                {context.Portfolio[item].description}\r\n                                            </ModalBody>\r\n                                            <ModalFooter style={{ backgroundColor: '#dee2e6' }}>\r\n                                                <a className=\"btn btn1\" href={context.Portfolio[item].siteUrl}>Goto Site</a>{' '}\r\n                                                <Button color=\"secondary\" onClick={this.onCloseModal}>Cancel</Button>\r\n                                            </ModalFooter>\r\n                                        </Modal>\r\n\r\n                                    </div>\r\n                                )) : <div className=\"card\">Record Not Available</div>}\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                }\r\n            </MyContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { SocialIcon } from 'react-social-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../store/MyContext'\r\n\r\nconst Links = () => {\r\n    const { Links } = useContext(MyContext)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"mylinks\" >\r\n                <div className=\"card\" style={{ boxShadow: \"0 5px 11px #ccc\" }}>\r\n                    <div className=\"card-header mylink-header\">\r\n                        <FontAwesomeIcon icon={faLink} />{' '}LINKS</div>\r\n                    <div className=\"card-body\" style={{ textAlign: 'center', paddingTop: '50px' }}>\r\n                        {Links ? Object.keys(Links).map(item => (\r\n                            <span key={item}>\r\n                                <SocialIcon url={Links[item].siteUrl} />{' '}\r\n                            </span>\r\n                        )\r\n                        ) : <div>Record Not Available</div>}\r\n                        <br /><br />\r\n                        <hr style={{ width: '150px' }}></hr>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Links;\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelopeOpen, faMapMarkerAlt, faMobileAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../store/MyContext'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class ContactMe extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tooltipOpen: true,\r\n            errorMessage: '',\r\n            username: '',\r\n            email: '',\r\n            message: '',\r\n            subject: ''\r\n        }\r\n        this.refmsg = React.createRef()\r\n        this.refuser = React.createRef()\r\n        this.refemail = React.createRef()\r\n        this.refsub = React.createRef()\r\n    }\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        let err = ''\r\n        if (name === 'message' || name === 'username' || name === 'subject') {\r\n            if (value.length < 3) {\r\n                err = `Enter your ${name} with atleast 3 character`\r\n            }\r\n        }\r\n        this.setState({\r\n            errorMessage: err\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { username, email, message, subject } = this.state\r\n        if (message.length <= 3) {\r\n            this.refmsg.current.focus();\r\n            this.setState({\r\n                tooltipOpen: true\r\n            })\r\n        }\r\n        if (username.length < 3) {\r\n            this.refuser.current.focus();\r\n        }\r\n        if (!email) {\r\n            this.refemail.current.focus();\r\n        }\r\n        if (subject.length < 3) {\r\n            this.refsub.current.focus();\r\n        }\r\n        const urls = e.target.elements.urls.value\r\n\r\n        if (username.length >= 3 && email && message.length >= 3 && subject.length >= 3) {\r\n            fetch(`${urls}/contactus.json`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"username\": username,\r\n                    \"email\": email,\r\n                    \"message\": message,\r\n                    \"subject\": subject\r\n                })\r\n            }).then(res => {\r\n                if (res.status === 200) {\r\n                    this.setState({\r\n                        username: '',\r\n                        email: '',\r\n                        message: '',\r\n                        subject: ''\r\n                    })\r\n                    Swal.fire(\r\n                        'Message Sent! Will Contact you soon',\r\n                        ' ',\r\n                        'success'\r\n                    )\r\n                }\r\n            })\r\n        } else {\r\n            Swal.fire('Please fill fields with atleast 3 characters')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => this.setState({ success: false }), 5000)\r\n    }\r\n\r\n    render() {\r\n        // var alertMsg = null;\r\n        // if (this.state.success) {\r\n        //     alertMsg = (\r\n        //         <div className=\"alert alert-success my-3\">\r\n        //             <strong> Message sent! Thank you, will contact you soon! </strong>\r\n        //         </div>)\r\n        // }\r\n        const { username, email, message, subject } = this.state\r\n\r\n        return (\r\n            <MyContext.Consumer>\r\n                {context => (\r\n                    <React.Fragment>\r\n                        <div className=\"contact\" style={{ overflow: 'auto' }}>\r\n                            <div className=\"card\" style={{ boxShadow: \"0 5px 11px #ccc\" }} >\r\n                                <div className=\"card-header\"><FontAwesomeIcon icon={faEnvelopeOpen} />{' '}CONTACT ME</div>\r\n                                <div className=\"card-body\" style={{ background: '#e9ecef' }}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-8\">\r\n                                            <div className=\"contact-form\">\r\n                                                <form onSubmit={this.handleSubmit} id=\"post\">\r\n                                                    <textarea name=\"message\" id=\"message\" cols=\"50\" rows=\"5\" maxLength=\"300\" placeholder=\"Message\"\r\n                                                        className=\"form-control\" style={{ marginBottom: '10px' }} title=\"Maximum of 300 characters can use\"\r\n                                                        onChange={this.handleChange} ref={this.refmsg} value={message} />\r\n\r\n                                                    <input type=\"text\" title={this.state.errorMessage} name=\"username\" placeholder=\"Username\"\r\n                                                        className=\"form-control\" style={{ marginRight: \"4%\" }}\r\n                                                        onChange={this.handleChange} ref={this.refuser} value={username} />\r\n                                                    <input type=\"email\" name=\"email\" placeholder=\"Email\"\r\n                                                        className=\"form-control\" required id=\"contact-email\"\r\n                                                        onChange={this.handleChange} ref={this.refemail} value={email} />\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" title={this.state.errorMessage} name=\"subject\" placeholder=\"Subject\"\r\n                                                            className=\"form-control\" required\r\n                                                            onChange={this.handleChange} ref={this.refsub} value={subject} />\r\n                                                    </div>\r\n                                                    <input type=\"hidden\" name=\"urls\" value={context.url} />\r\n                                                    <div className=\"form-sub port-btn\">\r\n                                                        <button type=\"submit\" className=\"btn btn1\" style={{ color: \"white\", backgroundColor: \"black\" }}>SEND MESSAGE</button>\r\n                                                    </div>\r\n                                                    <span></span>\r\n                                                </form>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4\">\r\n                                            <div className=\"address\">\r\n                                                <hr />\r\n                                                {(context.Personal) ? Object.keys(context.Personal).map((item, id) =>\r\n                                                    (<span key={id}><p><FontAwesomeIcon icon={faMapMarkerAlt} />{' '}{context.Personal[item].address}</p>\r\n                                                        <p><FontAwesomeIcon icon={faEnvelopeOpen} />{' '}{context.Personal[item].email}</p>\r\n                                                        <p><FontAwesomeIcon icon={faMobileAlt} />{' '}{context.Personal[item].phone}</p></span>)\r\n                                                ) : <div>Record Not Available</div>}\r\n                                                <hr />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n            </MyContext.Consumer>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container-sm pt-5\">\r\n                <h3 className=\"text-center pt-50\">Page Not Found!</h3>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Error;","import React, { useContext } from 'react'\r\nimport { HashRouter as Router, Switch, Route, NavLink } from 'react-router-dom'\r\nimport './App.css';\r\nimport LeftPane from './components/layouts/left/LeftPane'\r\nimport Home from './components/layouts/right/Home'\r\nimport AboutMe from './components/layouts/right/AboutMe'\r\nimport EduExpSkill from './components/layouts/right/EduExpSkill'\r\nimport Portfolio from './components/layouts/right/Portfolio'\r\nimport Links from './components/layouts/right/Links'\r\nimport ContactMe from './components/layouts/right/ContactMe'\r\nimport Error from './components/Error'\r\nimport './Main.css'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBriefcase, faHome, faGraduationCap, faLink, faEnvelopeOpen } from '@fortawesome/free-solid-svg-icons'\r\nimport Spinner from './components/UI/Spinner/Spinner'\r\nimport MyContext from './store/MyContext'\r\n\r\nconst Main = () => {\r\n    const { loading } = useContext(MyContext)\r\n    return (\r\n        <Router>\r\n            {\r\n                loading ?\r\n                    <div className=\"jumbotron\" style={{ height: '100vh' }}>\r\n                        <Spinner />\r\n                    </div>\r\n\r\n                    : <div className=\"jumbotron\" style={{ padding: '30px -1px', marginBottom: \"unset\" }}>\r\n                        <span className='btn-group'>\r\n                            <NavLink className=\"btn bt bt1\" to=\"/\" exact><FontAwesomeIcon icon={faHome} /></NavLink>\r\n                            <NavLink className=\"btn bt bt2\" to=\"/eduskill\"><FontAwesomeIcon icon={faGraduationCap} /></NavLink>\r\n                            <NavLink className=\"btn bt bt3\" to=\"/portfolio\"><FontAwesomeIcon icon={faBriefcase} /></NavLink>\r\n                            <NavLink className=\"btn bt bt4\" to=\"/links\"><FontAwesomeIcon icon={faLink} /></NavLink>\r\n                            <NavLink className=\"btn bt bt5\" to=\"/contact\"><FontAwesomeIcon icon={faEnvelopeOpen} /></NavLink>\r\n                        </span>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                                <LeftPane />\r\n                            </div>\r\n                            <div className=\"col-lg-9 col-md-9 col-sm-12\">\r\n                                <div className=\"container\" style={{ padding: '5px' }}>\r\n                                    <div className=\"card\" style={CardColor}>\r\n                                        <div className=\"card-header app-header\" style={CardhColor}>\r\n                                            <Switch>\r\n                                                <Route exact path='/' component={Home} />\r\n\r\n                                                <Route exact path=\"/about\" component={AboutMe} />\r\n\r\n                                                <Route exact path=\"/portfolio\" component={Portfolio} />\r\n\r\n                                                <Route exact path=\"/links\" component={Links} />\r\n\r\n                                                <Route exact path=\"/contact\" component={ContactMe} />\r\n\r\n                                                <Route path=\"/eduskill\" component={EduExpSkill} />\r\n\r\n                                                <Route component={Error} />\r\n                                            </Switch>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </Router>\r\n    )\r\n}\r\nexport default Main;\r\n\r\nconst CardColor = {\r\n    backgroundColor: 'transparent',\r\n    border: '1px solid #fff'\r\n}\r\nconst CardhColor = {\r\n    backgroundColor: 'transparent',\r\n    borderBottom: 'Unset'\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { signInWithGoogle } from '../../../firebase/firebase'\r\nimport './login.scss'\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        const { errorMessage } = this.props\r\n        let error = null\r\n        if (errorMessage) {\r\n            error = <span style={{ color: 'red' }}>{errorMessage}</span>\r\n        }\r\n        return (\r\n            <div className=\"login-dark\">\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                    <h2 className=\"sr-only\">Login Form</h2>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            type=\"email\" name=\"email\"\r\n                            placeholder=\"Email\" required\r\n                            onChange={this.props.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            type=\"password\" name=\"password\"\r\n                            placeholder=\"Password\" required\r\n                            onChange={this.props.handleChange} />\r\n                        {error}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\"\r\n                            type=\"submit\">Sign In</button>\r\n\r\n                        {/* google signin button is added for optional but hidded*/}\r\n                        <button className=\"btn btn-primary btn-block\" style={{ display: 'none' }}\r\n                            onClick={signInWithGoogle}>Sign In with Google</button>\r\n                    </div>\r\n                    <Link className=\"forgot\" to=\"/admin\">Forgot your email or password?</Link>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n\r\nimport './button.scss'\r\n\r\nconst Button = ({ type = 'button', value, onclick }) => (\r\n    <input type={type}\r\n        className=\"button\"\r\n        value={value}\r\n        onClick={onclick} />\r\n)\r\n\r\nexport default Button;","import React from 'react'\r\n\r\nimport './form-input.scss'\r\n\r\nconst FormInput = ({ name, placeholder, handleChange, value }) => {\r\n    let str = placeholder.split(/(?=[A-Z])/).join(' ').slice(1)\r\n    let modifiedStr = placeholder.charAt(0).toUpperCase() + str\r\n\r\n    var types = 'text'\r\n    if (name === 'email') {\r\n        types = 'email'\r\n    }\r\n\r\n    var input = <input type={types}\r\n        placeholder={modifiedStr}\r\n        name={name}\r\n        value={value}\r\n        className=\"form-control formcontrol\"\r\n        onChange={handleChange}\r\n        title={`Select Your ${name}`}\r\n    />\r\n    if (name === 'address' || name === 'summary') {\r\n        input = <textarea placeholder={modifiedStr} value={value}\r\n            className=\"form-control textarea\" onChange={handleChange}\r\n            name={name} rows=\"4\" cols=\"50\" title={`Select Your ${name}`} />\r\n    }\r\n\r\n    var label = !value\r\n        ? (<div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">{modifiedStr}</span>\r\n        </div>) : ''\r\n\r\n    if (name === 'image' || name === 'resume') {\r\n        input = <div className=\"input-group mb-3\">\r\n            {label}\r\n            <div className=\"custom-file\">\r\n                <input type=\"file\" className=\"custom-file-input\"\r\n                    name={name}\r\n                    onChange={handleChange} title={`Select Your ${name}`} />\r\n                <label className=\"custom-file-label\"></label>\r\n            </div>\r\n        </div>\r\n    }\r\n    if (name === 'birthDate' || name === 'createdOn' || name === 'joined') {\r\n        input = <div className=\"input-group mb-3\">\r\n            {label}\r\n            <div className=\"custom-file\">\r\n                <input type=\"date\" className=\"custom-file-input\"\r\n                    name={name}\r\n                    onChange={handleChange}\r\n                    title={`Select Your ${name}`} />\r\n                <label className=\"custom-file-label\"></label>\r\n            </div>\r\n        </div>\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {input}\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default FormInput;","import React, { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport FormInput from '../form-input/form-input'\r\nimport Button from '../button/button'\r\nimport { database, storage } from '../../../../firebase/firebase'\r\nimport Swal from 'sweetalert2'\r\n\r\nclass EditModal extends Component {\r\n    state = {\r\n        record: {},\r\n        modal: true,\r\n        image: null,\r\n        resume: null,\r\n        imageName: '',  //this variable used to create dynamic image name\r\n        resumeName: ''  //this variable used to create dynamic image name\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            record: this.props.singleData\r\n        })\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n    handleChange = e => {\r\n        var { name, value } = e.target\r\n        if ((name === 'image' || name === 'resume') && e.target.files[0]) {\r\n            value = e.target.files[0]\r\n            const d = new Date()\r\n            const dynamicDate = d.getTime()\r\n            var imageName = '';\r\n            var resumeName = '';\r\n            if (name === 'image') {\r\n                imageName = dynamicDate + e.target.files[0].name\r\n                this.setState({ imageName })\r\n            }\r\n            if (name === 'resume') {\r\n                resumeName = dynamicDate + e.target.files[0].name\r\n                this.setState({ resumeName })\r\n            }\r\n            this.setState({\r\n                [name]: value    //keeping state to use for submission of files\r\n            })\r\n            value = dynamicDate + e.target.files[0].name\r\n        }\r\n\r\n        this.setState({\r\n            record: { ...this.state.record, [name]: value }\r\n        })\r\n    }\r\n    handleSubmit = (category, editKey, imgKey, e) => {\r\n        e.preventDefault()\r\n        const inputs = document.querySelectorAll(`#${category}2 input`)\r\n        var valid = false\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            if (inputs[i].value === '') {\r\n                valid = false\r\n                break;\r\n            } else {\r\n                valid = true\r\n            }\r\n        }\r\n        const { record } = this.state\r\n        if (record && valid) {\r\n            const { image, resume, imageName, resumeName } = this.state\r\n\r\n            if (image) {\r\n                storage\r\n                    .ref(`images/${imageName}`)\r\n                    .put(image)\r\n                    .then(res => {\r\n                        storage.ref(`images/${imgKey['image']}`).delete()\r\n                    })\r\n            }\r\n            if (resume) {\r\n                storage\r\n                    .ref(`resumes/${resumeName}`)\r\n                    .put(resume)\r\n                    .then(res => {\r\n                        storage.ref(`resumes/${imgKey['resume']}`).delete()\r\n                    })\r\n            }\r\n\r\n            Swal.fire({\r\n                title: 'Your Data is Updating on Server...',\r\n                html: 'Wait for moment',\r\n                timerProgressBar: true,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading()\r\n                }\r\n            })\r\n            database\r\n                .ref(category + '/' + editKey)\r\n                .update(record)\r\n                .then((res) => {\r\n                    this.setState({ record: {}, modal: !this.state.modal })\r\n                    Swal.close()\r\n                })\r\n        } else {\r\n            Swal.fire('Please fill all fields')\r\n        }\r\n    }\r\n    render() {\r\n        var { editItem, editKey, imgKey } = this.props\r\n        editItem = editItem.toString()\r\n        if (!editItem) {\r\n            editItem = 'Personal'\r\n        }\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.modal} >\r\n                    <ModalHeader toggle={this.toggle} style={{ color: '#fff', padding: '10px 10px 10px 18px', borderBottomColor: '#283054' }}>\r\n                        {editItem}\r\n                    </ModalHeader>\r\n                    <form onSubmit={(e) => this.handleSubmit(editItem, editKey, imgKey, e)}\r\n                        id={`${editItem}2`} >\r\n                        <ModalBody style={{ maxHeight: \"77vh\", overflow: 'auto' }}>\r\n                            <div className={`data-form-inner ${editItem}`} >\r\n                                {Object.entries(this.state.record).map(([key, value]) => (\r\n                                    (key !== 'image' || key !== 'resume' || key !== 'birthData' || key !== 'createdOn' || key !== 'joined')\r\n                                        ? (<React.Fragment key={`${editItem}_${key}`}>\r\n                                            <label style={{ display: \"block\" }}>{key.charAt(0).toUpperCase() + key.split(/(?=[A-Z])/).join(' ').slice(1)}</label>\r\n                                            <FormInput\r\n                                                name={key}\r\n                                                value={value}\r\n                                                placeholder={key}\r\n                                                handleChange={(e) => this.handleChange(e)} />\r\n                                        </React.Fragment>)\r\n                                        : (<React.Fragment>\r\n                                            <label style={{ display: \"block\" }}>{key}</label>\r\n                                            <FormInput key={`${editItem}_${key}`}\r\n                                                name={key}\r\n                                                placeholder={key}\r\n                                                handleChange={(e) => this.handleChange(e)} />\r\n                                        </React.Fragment>)\r\n\r\n                                ))\r\n                                }\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter style={{ borderTopColor: '#283054' }}>\r\n                            <Button value=\"Submit\" type=\"submit\" />{' '}\r\n                            <Button value=\"Cancel\" onclick={this.toggle} />\r\n                        </ModalFooter>\r\n                    </form>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default EditModal;\r\n\r\n","import React from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport Swal from 'sweetalert2'\r\nimport './show_modal.scss'\r\nimport SortedFields from '../form-fields/sorted-fields.json'\r\nimport { database, storage } from '../../../../firebase/firebase'\r\nimport EditModal from './edit_modal'\r\nimport Button from '../button/button'\r\n\r\nclass ShowModel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editKey: '',\r\n            editItem: '',\r\n            imgKey: '',  //passed this img obj to edit modal to delete existing img\r\n            toggleEdit: false\r\n        }\r\n    }\r\n    handleDelete = (category, item, imgData) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                if (imgData['image']) {\r\n                    storage\r\n                        .ref(`images/${imgData['image']}`)\r\n                        .delete()\r\n                        .then((error) => {\r\n                            console.log(error)\r\n                        })\r\n                }\r\n                if (imgData['resume']) {\r\n                    storage\r\n                        .ref(`resumes/${imgData['resume']}`)\r\n                        .delete()\r\n                        .then((error) => {\r\n                            console.log(error)\r\n                        })\r\n                }\r\n                const res = database.ref(category + '/' + item).remove()\r\n                if (res) {\r\n                    Swal.fire(\r\n                        'Deleted!',\r\n                        'Your record has been deleted.',\r\n                        'success'\r\n                    )\r\n                }\r\n            }\r\n        })\r\n    }\r\n    handleEdit = (category, editKey, DataImage) => {\r\n        this.setState({\r\n            editItem: category,\r\n            editKey: editKey,\r\n            imgKey: DataImage,\r\n            toggleEdit: !this.state.toggleEdit\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { editItem, editKey } = this.state\r\n        var { itemKey, onOpenModal, data } = this.props\r\n        var category = itemKey.toString()\r\n        if (!itemKey) {\r\n            category = 'Personal'\r\n        }\r\n\r\n        let alert = (category === 'Personal') ? (<tr><td colSpan={5} style={{ color: 'red' }}>Please keep only one record for Personal info</td></tr>) : null\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={onOpenModal} className=\"field-modal\">\r\n                    <ModalHeader className=\"justify-content-center field-modal-header\" id=\"\">\r\n                        {category.toUpperCase()}\r\n                        <div className=\"close\">\r\n                            <button type=\"button\" id=\"\" className=\"btn close-btn\" onClick={this.props.onCloseModal}>x</button>\r\n                        </div>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"field-modal-body\">\r\n                        <div className=\"table-responsive field-modal-body-div\" id=\"\">\r\n                            <table className=\"table table-striped\" >\r\n                                <thead>\r\n                                    <tr>\r\n                                        {SortedFields[category].map(item =>\r\n                                            <td key={item}><b>{item.toUpperCase()}</b></td>)}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {(data[category]) ? Object.keys(data[category]).map((item, id) => (\r\n                                        <tr key={item}>\r\n                                            {Object.keys(data[category][item]).map(it =>\r\n                                                <td key={it}>{data[category][item][it]}</td>\r\n                                            )}\r\n                                            <td>\r\n                                                <button className=\"btn btn-success\" onClick={() => this.handleEdit(category, item, data[category][item])}>Edit</button>\r\n                                            </td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-danger\" onClick={() => this.handleDelete(category, item, data[category][item])}>delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )) : <tr><th colSpan={2}>Record Not available!</th></tr>}\r\n                                    {alert}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        {(this.state.toggleEdit)\r\n                            ? <EditModal\r\n                                singleData={data[editItem][editKey]}\r\n                                editKey={editKey}\r\n                                imgKey={this.state.imgKey}\r\n                                editItem={editItem} /> : null}\r\n                    </ModalBody>\r\n                    <ModalFooter style={{ backgroundColor: '#dee2e6', padding: 'unset' }}>\r\n                        <Button value=\"Close\" onclick={this.props.onCloseModal} />\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowModel;\r\n","import React, { Component } from 'react'\r\n\r\nimport Button from '../button/button'\r\nimport ShowModel from './show_model'\r\n\r\nclass DataList extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            Personal: {},\r\n            Portfolio: {},\r\n            Education: {},\r\n            Experience: {},\r\n            Skills: {},\r\n            Links: {},\r\n            url: 'https://react-porfolio.firebaseio.com',\r\n            itemKey: '',\r\n            onOpenModal: false\r\n        }\r\n    }\r\n    // componentDidMount() {\r\n    //     this.fetch_data()\r\n    // }\r\n    componentDidUpdate() {\r\n        this.fetch_data()\r\n    }\r\n    async fetch_data() {\r\n\r\n        const urls = [\r\n            'Personal',\r\n            'Portfolio',\r\n            'Links',\r\n            'Education',\r\n            'Experience',\r\n            'Skills',\r\n        ]\r\n        try {\r\n            const [Personal, Portfolio, Links, Education, Experience, Skills] = await Promise.all(urls.map(url =>\r\n                fetch(`${this.state.url}/${url}.json`).then(res => res.json())\r\n            ))\r\n\r\n            this.setState({\r\n                Personal,\r\n                Portfolio,\r\n                Links,\r\n                Education,\r\n                Experience,\r\n                Skills\r\n            })\r\n        } catch (error) {\r\n            this.setState({ error })\r\n        }\r\n\r\n    }\r\n    handleShow = (itemKey) => {\r\n        this.setState({ itemKey, onOpenModal: true })\r\n    }\r\n    onCloseModal = () => {\r\n        this.setState({\r\n            onOpenModal: false,\r\n            itemKey: ''\r\n        })\r\n    }\r\n    render() {\r\n        const { onOpenModal, itemKey } = this.state\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Button value=\"Show\" onclick={() => this.handleShow(this.props.itemKey)} />{'  '}\r\n\r\n                {onOpenModal\r\n                    ? <ShowModel\r\n                        onOpenModal={onOpenModal}\r\n                        onCloseModal={this.onCloseModal}\r\n                        handleEdit={this.props.handleEdit}\r\n                        itemKey={itemKey} data={this.state} />\r\n                    : null}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataList;","import React from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport Swal from 'sweetalert2'\r\nimport { database } from '../../../../firebase/firebase'\r\nimport Button from '../button/button'\r\n\r\nclass ShowMessageModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            messages: {},\r\n            url: 'https://react-porfolio.firebaseio.com'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            messages: this.props.messages\r\n        })\r\n    }\r\n    componentDidUpdate() {\r\n        this.showMessages()\r\n    }\r\n\r\n    showMessages() {\r\n        fetch(`${this.state.url}/contactus.json`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    messages: data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                database\r\n                    .ref('contactus/' + key)\r\n                    .remove()\r\n                    .then(() => {\r\n                        Swal.fire(\r\n                            'Deleted!',\r\n                            'Message has been deleted.',\r\n                            'success'\r\n                        )\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { messages } = this.state\r\n        const { showMessageModal, hideMessageModal } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={showMessageModal} className=\"field-modal\">\r\n                    <ModalHeader className=\"justify-content-center field-modal-header\">\r\n                        Contacts\r\n                        <div className=\"close\">\r\n                            <button type=\"button\" className=\"btn close-btn\" onClick={hideMessageModal}>x</button>\r\n                        </div>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"field-modal-body\">\r\n                        <div className=\"table-responsive field-modal-body-div\" >\r\n                            <table className=\"table table-striped\" >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td><b>Email</b></td>\r\n                                        <td><b>Message</b></td>\r\n                                        <td><b>Subject</b></td>\r\n                                        <td><b>User</b></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Object.keys(messages).map((item, id) => (\r\n                                        <tr key={item}>\r\n                                            {Object.keys(messages[item]).map(it =>\r\n                                                <td key={it}>{messages[item][it]}</td>\r\n                                            )}\r\n                                            <td>\r\n                                                <button className=\"btn btn-danger\" onClick={() => this.handleDelete(item)}>delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter style={{ backgroundColor: '#dee2e6', padding: 'unset' }}>\r\n                        <Button value=\"Close\" onclick={hideMessageModal} />\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowMessageModal;\r\n","import React from 'react'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport Swal from 'sweetalert2'\r\nimport Button from './button/button'\r\nimport FormInput from './form-input/form-input'\r\nimport DataList from './data_list/data_list'\r\nimport './data_entry.scss'\r\nimport FormFields from './form-fields/form-fields.json'\r\nimport { auth, storage } from '../../../firebase/firebase'\r\nimport ShowMessageModal from './showMessageModal/showMessageModal'\r\n\r\nclass DataEntry extends React.Component {\r\n    state = {\r\n        Personal: {},\r\n        Portfolio: {},\r\n        Education: {},\r\n        Experience: {},\r\n        Links: {},\r\n        Skills: {},\r\n        messages: {},\r\n        url: 'https://react-porfolio.firebaseio.com',\r\n        showMessageModal: false,\r\n        image: null,    //this object used to upload image\r\n        resume: null,   //this object used to upload file\r\n        imageName: '',  //this variable used to create dynamic image name\r\n        resumeName: ''  //this variable used to create dynamic image name\r\n\r\n    }\r\n\r\n    abortController = new AbortController()\r\n\r\n    handleChange(sectionName, e) {\r\n        var { name, value } = e.target\r\n\r\n        if ((name === 'image' || name === 'resume') && e.target.files[0]) {\r\n            value = e.target.files[0]\r\n            const d = new Date()\r\n            const dynamicDate = d.getTime()\r\n            var imageName = '';\r\n            var resumeName = '';\r\n            if (name === 'image') {\r\n                imageName = dynamicDate + e.target.files[0].name\r\n                this.setState({ imageName })\r\n            }\r\n            if (name === 'resume') {\r\n                resumeName = dynamicDate + e.target.files[0].name\r\n                this.setState({ resumeName })\r\n            }\r\n            this.setState({\r\n                [name]: value   //keeping state to use for submission of files\r\n            })\r\n            value = dynamicDate + e.target.files[0].name\r\n        }\r\n        if (sectionName in this.state) {\r\n            const ObjOfState = this.state[sectionName]\r\n            ObjOfState[name] = value\r\n\r\n            this.setState({\r\n                [sectionName]: ObjOfState\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit(sectionName, e) {\r\n        e.preventDefault()\r\n        const inputs = document.querySelectorAll(`#${sectionName} input`)\r\n        var valid = false\r\n        for (let i = 0; i < inputs.length; i++) {\r\n\r\n            if (inputs[i].value === '') {\r\n                valid = false\r\n                break;\r\n            } else {\r\n                valid = true\r\n            }\r\n\r\n        }\r\n        if (!valid) {\r\n            Swal.fire('Please fill all fields')\r\n        } else {\r\n            //for Personal data to check whether it exists\r\n            // var PersonalData_exits;\r\n            // if (sectionName === 'Personal') {\r\n\r\n            // database.ref(`Personal`).limitToFirst(1).once(\"value\", snapshot => {\r\n            //     if (snapshot.exists()) {\r\n            //         PersonalData_exits = false;\r\n            //         Swal.fire('Data Exists! Only one record is allowed, please update data')\r\n            //         this.setState({\r\n            //             [sectionName]: {}\r\n            //         })\r\n            //         document.getElementById(sectionName.toString()).reset()\r\n            //         return false;\r\n            //     }\r\n            //     PersonalData_exits = true;\r\n            // }).then(res => console.log(res)\r\n            // )\r\n            // }\r\n\r\n            // if ((sectionName === 'Personal' && PersonalData_exits) || sectionName !== 'Personal') {\r\n\r\n            Swal.fire({\r\n                title: 'Data is Saving on Server...',\r\n                html: 'Wait for moment',\r\n                timerProgressBar: true,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading()\r\n                }\r\n            })\r\n\r\n\r\n            if (sectionName in this.state) {\r\n                var ObjOfState = this.state[sectionName]\r\n\r\n                fetch(`https://react-porfolio.firebaseio.com/${sectionName}.json`, {\r\n                    method: 'POST',\r\n                    mode: 'cors',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(ObjOfState)\r\n                }).then(res => {\r\n                    if (res.status === 200) {\r\n                        const { image, resume, imageName, resumeName } = this.state\r\n                        if (image) {\r\n                            storage.ref(`images/${imageName}`).put(image)\r\n                        }\r\n                        if (resume) {\r\n                            storage.ref(`resumes/${resumeName}`).put(resume)\r\n                        }\r\n                        this.setState({\r\n                            [sectionName]: {}\r\n                        })\r\n                        document.getElementById(sectionName.toString()).reset()\r\n                        Swal.close()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${this.state.url}/contactus.json`, { signal: this.abortController.signal })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    messages: data\r\n                })\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.abortController.abort()\r\n        this.setState(prevState => ({\r\n            showMessageModal: !prevState.showMessageModal\r\n        }))\r\n    }\r\n\r\n    showMessages() {\r\n        this.setState(prevState => ({\r\n            showMessageModal: !prevState.showMessageModal\r\n        }))\r\n    }\r\n\r\n    hideMessageModal = () => {\r\n        this.setState(prevState => ({\r\n            showMessageModal: !prevState.showMessageModal\r\n        }))\r\n    }\r\n    reset = (item, e) => {\r\n        document.getElementById(item.toString()).reset()\r\n    }\r\n    resetAll = (items, e) => {\r\n        items.map(item => document.getElementById(item.toString()).reset())\r\n    }\r\n\r\n    render() {\r\n        const { showMessageModal, messages } = this.state\r\n        return (\r\n            <div className=\"container-fluid data-container\">\r\n                <div className=\"data-form\">\r\n                    <div className=\"form-scroll\">\r\n                        <div className=\"signOut-div\">\r\n                            <Button value=\"Messages\"\r\n                                onclick={() => this.showMessages()} />{' '}\r\n                            <Button value={`${this.props.currentUser.email}(Sign Out)`}\r\n                                onclick={() => auth.signOut()} />\r\n                        </div>\r\n                        <Carousel ref={ref => (this.carousel = ref)} >\r\n                            {Object.keys(FormFields).map((item, id) => (\r\n                                <div className=\"scroller\" key={id}>\r\n                                    <div className=\"data-form-inner data-form-inner-top\" >\r\n                                        <div className=\"left-btn\">\r\n                                            <Button value=\"<\" onclick={() => this.carousel.slidePrev()} />\r\n                                        </div>\r\n                                        <div className=\"center-btn\">\r\n                                            <DataList itemKey={item} handleEdit={this.handleEdit} />{'  '}\r\n                                            <Button value=\"Reset\" onclick={(e) => this.reset(item, e)} />{'  '}\r\n                                            <Button value=\"Reset All\" onclick={(e) => this.resetAll(Object.keys(FormFields), e)} />\r\n                                        </div>\r\n                                        <div className=\"right-btn\">\r\n                                            <Button value=\">\" onclick={() => this.carousel.slideNext()} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`data-form-inner ${item}`} >\r\n                                        <form onSubmit={(e) => this.handleSubmit(item, e)}\r\n                                            id={item} ref='myform'>\r\n                                            <h1 className=\"header\">{item}</h1>\r\n                                            {FormFields[item].map((formfield) => (\r\n                                                <FormInput\r\n                                                    key={formfield}\r\n                                                    name={formfield}\r\n                                                    placeholder={formfield}\r\n                                                    handleChange={(e) => this.handleChange(item, e)} />\r\n\r\n                                            ))}\r\n                                            <div className=\"form-btn\">\r\n                                                <Button value=\"Submit\" type=\"submit\" />\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </Carousel>\r\n                        {showMessageModal\r\n                            ? <ShowMessageModal\r\n                                showMessageModal={showMessageModal}\r\n                                hideMessageModal={this.hideMessageModal}\r\n                                messages={messages}\r\n                            />\r\n                            : null}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataEntry","import React, { Component } from 'react'\r\nimport Login from './login/login'\r\nimport DataEntry from './data_entry/data_entry'\r\nimport { auth } from '../../firebase/firebase'\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentUser: null,\r\n            email: '',\r\n            password: '',\r\n            errorMessage: ''\r\n        }\r\n    }\r\n    handleFields = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const { email, password } = this.state\r\n        if (email && password) {\r\n            try {\r\n                await auth.signInWithEmailAndPassword(email, password)\r\n                this.setState({\r\n                    email: '',\r\n                    password: '',\r\n                    errorMessage: ''\r\n                })\r\n            } catch (error) {\r\n                this.setState({\r\n                    errorMessage: error.message\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                errorMessage: 'Please provide valid email and password'\r\n            })\r\n        }\r\n    }\r\n\r\n    unsubscribeFromAuth = null\r\n\r\n    componentDidMount() {\r\n        this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\r\n            this.setState({\r\n                currentUser: user\r\n            })\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this.unsubscribeFromAuth();\r\n    }\r\n    render() {\r\n        const { currentUser, errorMessage } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                {currentUser\r\n                    ? (<DataEntry currentUser={currentUser} />)\r\n\r\n                    : (<Login currentUser={currentUser}\r\n                        handleChange={this.handleFields}\r\n                        handleSubmit={this.handleSubmit}\r\n                        errorMessage={errorMessage} />)\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component } from 'react'\r\nimport MyContext from './MyContext'\r\n\r\nexport default class GlobalStore extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Personal: {},\r\n            Portfolio: {},\r\n            Links: {},\r\n            Education: {},\r\n            Experience: {},\r\n            Skills: {},\r\n            url: 'https://react-porfolio.firebaseio.com',\r\n            error: false,\r\n            loading: true\r\n        }\r\n        this.fetch_data = this.fetch_data.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch_data()\r\n    }\r\n\r\n    async fetch_data() {\r\n\r\n        const urls = [\r\n            'Personal',\r\n            'Portfolio',\r\n            'Links',\r\n            'Education',\r\n            'Experience',\r\n            'Skills',\r\n        ]\r\n        try {\r\n            const [Personal, Portfolio, Links, Education, Experience, Skills] = await Promise.all(urls.map(url =>\r\n                fetch(`${this.state.url}/${url}.json`).then(res => res.json())\r\n            ))\r\n\r\n            this.setState({\r\n                Personal,\r\n                Portfolio,\r\n                Links,\r\n                Education,\r\n                Experience,\r\n                Skills,\r\n                loading: false\r\n            })\r\n        } catch (error) {\r\n            this.setState({ error })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MyContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Main from './Main';\n\nimport Admin from './components/admin/admin';\nimport GlobalStore from './store/GlobalStore'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/admin\" component={Admin} />\n        <Route path=\"/\" component={\n          () => (\n            <GlobalStore>\n              <Main />\n            </GlobalStore>\n          )\n        } />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__17fLX\",\"load5\":\"Spinner_load5__2Uea_\"};","module.exports = __webpack_public_path__ + \"static/media/thumb.88724383.png\";"],"sourceRoot":""}