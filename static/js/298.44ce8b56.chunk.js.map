{"version":3,"file":"static/js/298.44ce8b56.chunk.js","mappings":"2LA2CA,IAnCoB,SAAH,GAAqB,IAK9BA,EALeC,EAAO,EAAPA,QACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAA4BF,EAAAA,EAAAA,UAAS,IAAG,eAAjCG,EAAM,KAAEC,EAAS,KACxB,GAA8BJ,EAAAA,EAAAA,WAAS,GAAK,eAArCK,EAAO,KAAEC,EAAU,KAGpBC,EAAUR,EAAQS,MAAM,KAAKC,MAAMC,cACzC,GAAgB,QAAZH,GAAiC,QAAZA,EAAmB,CACxC,IAAMI,GAAWC,EAAAA,EAAAA,IAAIC,EAAAA,GAAS,WAAad,IAC3Ce,EAAAA,EAAAA,IAAeH,GACVI,MAAK,SAACC,GACHZ,EAAUY,EACd,IACJlB,GAAY,eAAGmB,UAAU,WAAWC,MAAO,CAAEC,OAAQ,kBACjDC,KAAMjB,EAAQkB,OAAO,SAASC,IAAI,sBAAsBC,UAAQ,aAChE,SAAC,IAAe,CAACC,KAAMC,EAAAA,MAAe,IAAI,cAClD,CACA,GAAgB,QAAZlB,GAAiC,QAAZA,GAAiC,SAAZA,EAAoB,CAC9D,IAAMI,GAAWC,EAAAA,EAAAA,IAAIC,EAAAA,GAAS,UAAYd,IAC1Ce,EAAAA,EAAAA,IAAeH,GACVI,MAAK,SAACC,GACHd,EAAUc,GACVV,GAAW,EACf,IACJR,EACIO,GAAU,SAAC,IAAO,KAAM,gBAAKqB,IAAKzB,EAAQ0B,IAAI,UAAUV,UAAU,qBAC1E,CAEA,OACI,SAAC,WAAc,UACVnB,GAAwB,MAGrC,C,mKCZA,EAxBiB,WACb,IAAQ8B,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACR,OACI,SAAC,WAAc,UACTA,EAAYG,OAAOC,KAAKJ,GAAUK,KAAI,SAACC,EAAMC,GAAE,OAC7C,2BACI,iBAAKlB,UAAU,gBAAe,WAC1B,gBAAKA,UAAU,cAAcC,MAAO,CAAEkB,QAAS,OAAQjB,OAAQ,QAASkB,gBAAiB,iBAAkBC,aAAc,QAASC,UAAW,QAAS,UAClJ,gBAAKtB,UAAU,eAAeC,MAAO,CAAEsB,MAAO,QAASC,OAAQ,UAAW,SACrEb,EAASM,GAAMQ,OACV,SAAC,IAAW,CAAC3C,QAAS6B,EAASM,GAAMQ,MAAOzB,UAAU,uBACtD,gBAAKS,IAAKiB,EAAOhB,IAAI,UAAUV,UAAU,2BAIvD,gBAAKA,UAAU,oBAAmB,UAAC,0BAAOW,EAASM,GAAMU,mBAVtDT,EAaJ,KACN,gBAAKlB,UAAU,OAAM,SAAC,0BAGvC,C","sources":["components/layouts/getImageURL/getImageURL.js","components/layouts/left/LeftPane.js"],"sourcesContent":["import { storage } from '../../../firebase/firebase'\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport React, { useState } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\n\r\nconst GetImageURL = ({ urlName }) => {\r\n    const [imgUrl, setImgUrl] = useState('')\r\n    const [docUrl, setDocUrl] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    var customUrl;\r\n    const docType = urlName.split('.').pop().toLowerCase()\r\n    if (docType === 'pdf' || docType === 'doc') {\r\n        const storeRef = ref(storage, 'resumes/' + urlName);\r\n        getDownloadURL(storeRef)\r\n            .then((url) => {\r\n                setDocUrl(url)\r\n            });\r\n        customUrl = <a className=\"btn btn1\" style={{ border: \"1px solid #fff\" }}\r\n            href={docUrl} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n            <FontAwesomeIcon icon={faDownload} />{' '}My Resume</a>\r\n    }\r\n    if (docType === 'jpg' || docType === 'png' || docType === 'jpeg') {\r\n        const storeRef = ref(storage, 'images/' + urlName);\r\n        getDownloadURL(storeRef)\r\n            .then((url) => {\r\n                setImgUrl(url);\r\n                setLoading(false)\r\n            });\r\n        customUrl =\r\n            loading ? <Spinner /> : <img src={imgUrl} alt=\"no pics\" className=\"rounded img-fluid\" />\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {customUrl ? customUrl : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GetImageURL;\r\n\r\n","import React, { useContext } from 'react'\r\nimport MyContext from '../../../store/MyContext'\r\nimport GetImageURL from '../getImageURL/getImageURL'\r\nimport thumb from '../right/thumb.png'\r\n\r\nconst LeftPane = () => {\r\n    const { Personal } = useContext(MyContext)\r\n    return (\r\n        <React.Fragment>\r\n            {(Personal) ? Object.keys(Personal).map((item, id) => (\r\n                <span key={id}>\r\n                    <div className=\"card left-div\">\r\n                        <div className=\"card-header\" style={{ padding: '35px', border: 'unset', backgroundColor: 'rgb(0 253 153)', borderBottom: 'unset', minHeight: '40vh' }}>\r\n                            <div className=\"leftPane-div\" style={{ width: \"175px\", margin: \"0 auto\" }}>\r\n                                {Personal[item].image\r\n                                    ? <GetImageURL urlName={Personal[item].image} className=\"rounded img-fluid\"/>\r\n                                    : <img src={thumb} alt=\"no pics\" className=\"rounded img-fluid\" />\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-header descr\"><span>{Personal[item].latestTech}</span></div>\r\n\r\n                    </div>\r\n                </span>\r\n            )) : <div className=\"card\">Record Not Available</div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LeftPane;"],"names":["customUrl","urlName","useState","imgUrl","setImgUrl","docUrl","setDocUrl","loading","setLoading","docType","split","pop","toLowerCase","storeRef","ref","storage","getDownloadURL","then","url","className","style","border","href","target","rel","download","icon","faDownload","src","alt","Personal","useContext","MyContext","Object","keys","map","item","id","padding","backgroundColor","borderBottom","minHeight","width","margin","image","thumb","latestTech"],"sourceRoot":""}