{"version":3,"file":"static/js/968.ce52dede.chunk.js","mappings":"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","sources":["components/layouts/getImageURL/getImageURL.js","components/layouts/right/Portfolio.js"],"sourcesContent":["import { storage } from '../../../firebase/firebase'\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport React, { useState } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\n\r\nconst GetImageURL = ({ urlName }) => {\r\n    const [imgUrl, setImgUrl] = useState('')\r\n    const [docUrl, setDocUrl] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    var customUrl;\r\n    const docType = urlName.split('.').pop().toLowerCase()\r\n    if (docType === 'pdf' || docType === 'doc') {\r\n        const storeRef = ref(storage, 'resumes/' + urlName);\r\n        getDownloadURL(storeRef)\r\n            .then((url) => {\r\n                setDocUrl(url)\r\n            });\r\n        customUrl = <a className=\"btn btn1\" style={{ border: \"1px solid #fff\" }}\r\n            href={docUrl} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n            <FontAwesomeIcon icon={faDownload} />{' '}My Resume</a>\r\n    }\r\n    if (docType === 'jpg' || docType === 'png' || docType === 'jpeg') {\r\n        const storeRef = ref(storage, 'images/' + urlName);\r\n        getDownloadURL(storeRef)\r\n            .then((url) => {\r\n                setImgUrl(url);\r\n                setLoading(false)\r\n            });\r\n        customUrl =\r\n            loading ? <Spinner /> : <img src={imgUrl} alt=\"no pics\" className=\"rounded img-fluid\" />\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {customUrl ? customUrl : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GetImageURL;\r\n\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faClock, faCogs } from '@fortawesome/free-solid-svg-icons'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport GetImageURL from '../getImageURL/getImageURL'\r\nimport myContext from '../../../store/MyContext'\r\n\r\nexport default class Portfolio extends Component {\r\n    static contextType = myContext\r\n    state = {\r\n        toggleModal: false,\r\n        selectModal: null,\r\n        loading: true,\r\n        Portfolio: this.context.Portfolio\r\n    }\r\n\r\n    onOpenModal = id => {\r\n        this.setState({\r\n            toggleModal: true,\r\n            selectModal: id\r\n        })\r\n    }\r\n\r\n    onCloseModal = () => {\r\n        this.setState({\r\n            toggleModal: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { Portfolio } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"about\" style={{ overflow: \"auto\", backgroundColor: 'transparent', height: '81vh' }} >\r\n                    <h1>\r\n                        MY{' '}<span>PROJECTS</span>\r\n                    </h1>\r\n                    {/* <hr style={{ width: \"200px\" }} /> */}\r\n                    {(Portfolio) ? Object.keys(Portfolio).map((item, id) => (\r\n                        <div key={id} className=\"card\" style={{ marginBottom: \"15px\", boxShadow: \"0 5px 11px #ccc\" }}>\r\n                            <div className=\"card-header\" style={{ paddingBottom: 0, paddingTop: \"5px\" }}>\r\n                                <h5>{Portfolio[item].projectName}</h5>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6 col-md-6\">\r\n                                        <div className=\"project-img\">\r\n                                            <GetImageURL urlName={Portfolio[item].image} alt=\"no pics\" className=\"rounded img-fluid\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6 col-md-6\">\r\n                                        <table>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <p>\r\n                                                            <FontAwesomeIcon icon={faUser} />&nbsp;<b>Client: {Portfolio[item].client}</b>\r\n                                                        </p>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <p>\r\n                                                            <FontAwesomeIcon icon={faClock} /><b> Duration: {Portfolio[item].duration}</b>\r\n                                                        </p>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <p>\r\n                                                            <FontAwesomeIcon icon={faCogs} /><b> Technologies: {Portfolio[item].technology}</b>\r\n                                                        </p>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className=\"port-btn\" style={{ textAlign: \"right\" }}>\r\n                                                            <Button className=\"btn btn1\" onClick={() => this.onOpenModal(id)} style={{ backgroundColor: \"#000\", color: '#fff' }} >Preview</Button>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Modal isOpen={this.state.selectModal === id && this.state.toggleModal}\r\n                                toggle={this.toggleModal} style={{ top: \"30%\", transform: \"translate(0%, -5%)\" }}>\r\n                                <ModalHeader className=\"justify-content-center\"\r\n                                    style={{ backgroundColor: '#dee2e6' }}\r\n                                    toggle={this.toggleModal}>{Portfolio[item].projectName}\r\n                                </ModalHeader>\r\n                                <ModalBody style={{ backgroundColor: '#dee2e6' }}>\r\n                                    <h5>Project Description: </h5>\r\n                                    {Portfolio[item].description}\r\n                                </ModalBody>\r\n                                <ModalFooter style={{ backgroundColor: '#dee2e6' }}>\r\n                                    <a className=\"btn btn1\" href={Portfolio[item].siteUrl}>Goto Site</a>{' '}\r\n                                    <Button color=\"secondary\" onClick={this.onCloseModal}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n\r\n                        </div>\r\n                    )) : <div className=\"card\">Record Not Available</div>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n"],"names":["customUrl","urlName","useState","imgUrl","setImgUrl","docUrl","setDocUrl","loading","setLoading","docType","split","pop","toLowerCase","storeRef","ref","storage","getDownloadURL","then","url","className","style","border","href","target","rel","download","icon","faDownload","src","alt","Portfolio","state","toggleModal","selectModal","context","onOpenModal","id","setState","onCloseModal","this","overflow","backgroundColor","height","Object","keys","map","item","marginBottom","boxShadow","paddingBottom","paddingTop","projectName","image","faUser","client","faClock","duration","faCogs","technology","textAlign","onClick","color","isOpen","toggle","top","transform","description","siteUrl","Component","contextType","myContext"],"sourceRoot":""}