{"version":3,"sources":["store/MyContext.js","firebase/firebase.js","components/layouts/getImageURL/getImageURL.js","components/layouts/left/LeftPane.js","components/layouts/right/Home.js","components/layouts/right/AboutMe.js","components/layouts/right/Educ/Education.js","components/layouts/right/Educ/Experience.js","components/layouts/right/Educ/Skills.js","components/layouts/right/EduExpSkill.js","components/layouts/right/Portfolio.js","components/layouts/right/Links.js","components/layouts/right/ContactMe.js","components/Error.js","Main.js","components/admin/login/login.js","components/admin/data_entry/button/button.js","components/admin/data_entry/form-input/form-input.js","components/admin/data_entry/data_list/edit_modal.js","components/admin/data_entry/data_list/show_model.js","components/admin/data_entry/data_list/data_list.js","components/admin/data_entry/showMessageModal/showMessageModal.js","components/admin/data_entry/data_entry.js","components/admin/admin.js","store/GlobalStore.js","App.js","index.js","components/layouts/right/thumb.png"],"names":["myContext","createContext","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","storage","firestore","database","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","getImageURL","img","split","pop","ref","child","getDownloadURL","then","url","document","getElementById","setAttribute","error","console","log","LeftPane","MyContext","Consumer","context","Fragment","Object","keys","Personal","map","item","id","key","className","style","border","padding","backgroundColor","src","image","thumb","alt","latestTech","Component","Home","firstName","toUpperCase","designation","to","icon","faUser","resume","href","target","rel","download","faDownload","AboutMe","boxShadow","width","margin","summary","phone","lastName","address","birthDate","email","nationality","speakingLanguages","blogUrl","marginBottom","color","faBlog","Education","overflow","faGraduationCap","paddingBottom","degree","course","faCalendar","passYear","university","Experience","faTasks","company","duration","faCogs","technology","Skills","maxHeight","faStar","boxSizing","align","subject","stars","EduExpSkill","match","path","exact","component","Portfolio","props","onOpenModal","setState","toggleModal","selectModal","onCloseModal","state","loading","imgs","paddingTop","projectName","client","faClock","textAlign","onClick","Modal","isOpen","toggle","top","transform","ModalHeader","ModalBody","description","ModalFooter","siteUrl","Links","faLink","ContactMe","handleChange","e","name","value","err","length","errorMessage","handleSubmit","preventDefault","username","message","refmsg","current","focus","tooltipOpen","refuser","refemail","refsub","urls","elements","fetch","method","mode","headers","body","JSON","stringify","res","status","Swal","fire","React","createRef","setInterval","success","this","faEnvelopeOpen","background","onSubmit","cols","rows","maxlength","placeholder","title","onChange","type","marginRight","required","faMapMarkerAlt","faMobileAlt","Error","Main","faHome","faBriefcase","CardColor","CardhColor","borderBottom","Login","display","Button","onclick","FormInput","str","join","slice","modifiedStr","charAt","types","input","label","htmlFor","EditModal","record","modal","imageName","resumeName","files","dynamicDate","Date","getTime","category","editKey","imgKey","inputs","querySelectorAll","valid","i","put","delete","html","timerProgressBar","onBeforeOpen","showLoading","update","close","singleData","editItem","toString","borderBottomColor","entries","borderTopColor","ShowModel","handleDelete","imgData","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","remove","handleEdit","DataImage","toggleEdit","itemKey","data","SortedFields","it","DataList","handleShow","fetch_data","Promise","all","json","ShowMessageModal","messages","showMessages","showMessageModal","hideMessageModal","DataEntry","reset","resetAll","items","sectionName","ObjOfState","PersonalData_exits","limitToFirst","once","snapshot","exists","currentUser","signOut","carousel","FormFields","slidePrev","slideNext","formfield","Admin","handleFields","event","a","password","signInWithEmailAndPassword","unsubscribeFromAuth","onAuthStateChanged","user","GlobalStore","bind","Provider","children","App","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.aac35816.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nconst myContext = createContext();\r\n\r\nexport default myContext;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\nimport 'firebase/database'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDyK-vS9oiCEIZ3xdau8O1SfPoXpTxmy_U\",\r\n    authDomain: \"react-porfolio.firebaseapp.com\",\r\n    databaseURL: \"https://react-porfolio.firebaseio.com\",\r\n    projectId: \"react-porfolio\",\r\n    storageBucket: \"react-porfolio.appspot.com\",\r\n    messagingSenderId: \"402733075989\",\r\n    appId: \"1:402733075989:web:a38171fd1b9e7d3771881c\",\r\n    measurementId: \"G-D4YKFYR3WD\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth()\r\n\r\nexport const firestore = firebase.firestore()\r\n\r\nexport const storage = firebase.storage()\r\n\r\nexport const database = firebase.database()\r\n\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt: 'select_account' })\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase;","import { storage } from '../../../firebase/firebase'\r\n\r\nconst getImageURL = (img) => {\r\n    try {\r\n        if (img.split('.').pop() === 'pdf') {\r\n            storage.ref('resumes').child(img).getDownloadURL().then(url => {\r\n                if (url) {\r\n                    document.getElementById(img).setAttribute('href', url)\r\n                }\r\n            })\r\n        } else {\r\n            storage.ref('images').child(img).getDownloadURL().then(url => {\r\n                if (url) {\r\n                    document.getElementById(img).setAttribute('src', url)\r\n                }\r\n            })\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n    return ''\r\n}\r\n\r\nexport default getImageURL;\r\n","import React, { Component } from 'react'\r\nimport MyContext from '../../../store/MyContext'\r\nimport getImageURL from '../getImageURL/getImageURL'\r\nimport thumb from '../right/thumb.png'\r\n\r\nexport default class LeftPane extends Component {\r\n    render() {\r\n        return (\r\n            <MyContext.Consumer>\r\n                {context => (\r\n                    <React.Fragment>\r\n                        {Object.keys(context.Personal).map((item, id) => (\r\n                            <span key={id}>\r\n                                <div className=\"card\" style={{ border: 'unset' }}>\r\n                                    <div className=\"card-header\" style={{ padding: 'unset', border: 'unset', backgroundColor: '#e9ecef' }}>\r\n                                        <div className=\"leftPane-div\">\r\n                                            <img\r\n                                                src={!(context.Personal[item].image) ? thumb : (getImageURL(context.Personal[item].image))}\r\n                                                alt=\"no pics\" className=\"rounded img-fluid\" id={context.Personal[item].image} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card current\">\r\n                                    <div className=\"card-header\">{context.Personal[item].latestTech}</div>\r\n                                </div>\r\n                            </span>))\r\n                        }\r\n                    </React.Fragment>\r\n                )}\r\n            </MyContext.Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../store/MyContext'\r\nimport getImageURL from '../getImageURL/getImageURL'\r\n\r\nconst Home = () => (\r\n    <MyContext.Consumer>\r\n        {context => (\r\n            <React.Fragment>\r\n                {Object.keys(context.Personal).map(item => (\r\n                    <div key={item} className=\"home\">\r\n                        <h2> Hi ! I'M {context.Personal[item].firstName ? context.Personal[item].firstName.toUpperCase() : ''}</h2>\r\n                        <br />\r\n                        <h4> I'M {context.Personal[item].designation}</h4>\r\n                        <br />\r\n                        <Link to=\"/about\" className=\"btn btn1\" style={{ border: \"1px solid #fff\" }}>\r\n                            <FontAwesomeIcon icon={faUser} />{' '}About Me</Link>{' '}\r\n                        <a className=\"btn btn1\" id={context.Personal[item].resume} style={{ border: \"1px solid #fff\" }}\r\n                            href={!(context.Personal[item].resume) ? '' : getImageURL(context.Personal[item].resume)} target=\"_blank\" rel=\"noopener noreferrer\" download>\r\n                            <FontAwesomeIcon icon={faDownload} />{' '}My Resume</a>\r\n                    </div>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        )}\r\n\r\n    </MyContext.Consumer>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBlog, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../store/MyContext'\r\n\r\nconst AboutMe = () => (\r\n    <MyContext.Consumer>\r\n        {context => (\r\n            <React.Fragment >\r\n                {Object.keys(context.Personal).map(item => (\r\n                    <div key={item} className=\"card about ab\" style={{ boxShadow: \"0 5px 11px #ccc\" }}>\r\n                        <h1>\r\n                            ABOUT <span>ME</span>\r\n                        </h1>\r\n                        <hr style={{ width: \"150px\", margin: \"0 auto\" }} /><br />\r\n                        <h4><FontAwesomeIcon icon={faUser} />&nbsp;PERSONAL INFO</h4>\r\n                        <p> {context.Personal[item].summary} </p>\r\n                        <table className=\"table table-responsive\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <p>\r\n                                            <b> First Name:</b> {context.Personal[item].firstName}\r\n                                        </p>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p>\r\n                                            <b> Phone Number:</b> {context.Personal[item].phone}\r\n                                        </p>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <p>\r\n                                            <b> Last Name:</b> {context.Personal[item].lastName}\r\n                                        </p>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p>\r\n                                            <b> Address:</b> {context.Personal[item].address}\r\n                                        </p>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <p>\r\n                                            <b>Date of Birth:</b> {context.Personal[item].birthDate}\r\n                                        </p>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p>\r\n                                            <b> Email:</b> {context.Personal[item].email}\r\n                                        </p>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <p>\r\n                                            <b> Nationality:</b> {context.Personal[item].nationality}\r\n                                        </p>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p>\r\n                                            <b> Spoken Languages:</b> {context.Personal[item].speakingLanguages}\r\n                                        </p>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <div className=\"about-btn\">\r\n                            <a className=\"btn  btn1\" href={context.Personal[item].blogUrl}\r\n                                style={{ padding: \"6px 15px\", marginBottom: \"-5px\", backgroundColor: 'black', color: '#fff' }}>\r\n                                <FontAwesomeIcon icon={faBlog} />&nbsp;My Blog </a>\r\n                        </div>\r\n                        <br />\r\n                    </div>\r\n                ))}\r\n            </React.Fragment>\r\n        )}\r\n    </MyContext.Consumer>\r\n)\r\nexport default AboutMe\r\n\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGraduationCap, faCalendar } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../../store/MyContext'\r\n\r\nconst Education = () => (\r\n    <MyContext.Consumer>\r\n        {context => (\r\n            <React.Fragment>\r\n                <div className=\"education\">\r\n                    <div className=\"card\" style={{ boxShadow: \"0 5px 11px #ccc\", overflow: 'auto' }}>\r\n                        <div className=\"card-header\"><FontAwesomeIcon icon={faGraduationCap} />{' '}EDUCATION</div>\r\n                        <span>\r\n                            {Object.keys(context.Education).map((item, id) =>\r\n                                <div key={id} className=\"card-body\" style={{ paddingBottom: \"0\" }}>\r\n                                    <div className=\"header1\">\r\n                                        <h6><span>{context.Education[item].degree.toUpperCase()} </span>- {context.Education[item].course.toUpperCase()}</h6>\r\n                                        <p><FontAwesomeIcon icon={faCalendar} />{' '}{context.Education[item].passYear}</p>\r\n                                        Completed my {context.Education[item].degree}  from {' '}\r\n                                        <h6>{context.Education[item].university}</h6>\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>)\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )}\r\n    </MyContext.Consumer>\r\n)\r\n\r\nexport default Education;\r\n\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTasks, faCalendar, faCogs } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../../store/MyContext'\r\n\r\nconst Experience = () => (\r\n    <MyContext.Consumer>\r\n        {context => (\r\n            <React.Fragment>\r\n                <div className=\"experience\" >\r\n                    <div className=\"card\" style={{ boxShadow: \"0 5px 11px #ccc\", overflow: 'auto' }}>\r\n                        <div className=\"card-header\">\r\n                            <FontAwesomeIcon icon={faTasks} />{' '}EXPERIENCE</div>\r\n                        {Object.keys(context.Experience).map((item, id) => (\r\n                            <div key={id} className=\"card-body\" style={{ paddingBottom: 0 }}>\r\n                                <div className=\"header1\">\r\n                                    <h6><span>{context.Experience[item].designation} </span>- {context.Experience[item].company}</h6>\r\n                                    <p><FontAwesomeIcon icon={faCalendar} />{'  '}{context.Experience[item].duration}</p>\r\n                                    <p><FontAwesomeIcon icon={faCogs} /> {'  '}{context.Experience[item].technology}</p>\r\n                                    <p>{context.Experience[item].summary}</p>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )}\r\n    </MyContext.Consumer>\r\n);\r\n\r\n\r\nexport default Experience\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../../store/MyContext'\r\n\r\nconst Skills = () => (\r\n    <MyContext.Consumer>\r\n        {context => (\r\n            <React.Fragment>\r\n                <div className=\"skills\" style={{ boxShadow: \"0 5px 11px #ccc\", maxHeight: '75vh', overflow: 'auto' }}>\r\n                    <div className=\"card\" style={{ overflow: 'auto' }}>\r\n                        <div className=\"card-header\"><FontAwesomeIcon icon={faStar} />{' '}SKILLS</div>\r\n                        <div className=\"card-body\">\r\n                            <table className=\"table\">\r\n                                <tbody className=\"row\">\r\n                                    {Object.keys(context.Skills).map((item, id) => (\r\n                                        <tr key={id} className=\"col-6 card\" style={{ boxSizing: \"border-box\", boxShadow: \"0px 1px 7px 2px #ccc\" }}>\r\n                                            <td align=\"center\">\r\n                                                <h6 >{context.Skills[item].subject}</h6>\r\n                                                <p>{context.Skills[item].stars}</p>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )}\r\n    </MyContext.Consumer>\r\n)\r\n\r\nexport default Skills;\r\n\r\n","import React from 'react'\r\nimport { NavLink, HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGraduationCap, faTasks, faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport Education from './Educ/Education'\r\nimport Experience from './Educ/Experience'\r\nimport Skills from './Educ/Skills'\r\n\r\nconst EduExpSkill = ({ match }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Router>\r\n                <div className=\"edu-container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-3 col-sm-12 col-xs-12 edu-left\">\r\n                            <div className=\"buttons\">\r\n                                <NavLink to={`${match.path}`} exact className=\" btn edu-btn edu-bt1\">\r\n                                    <FontAwesomeIcon icon={faGraduationCap} />&nbsp;EDUCATION </NavLink>\r\n                                <NavLink to={`${match.path}/experience`} exact className=\"btn edu-btn edu-bt2\">\r\n                                    <FontAwesomeIcon icon={faTasks} />&nbsp;EXPERIENCE</NavLink>\r\n                                <NavLink to={`${match.path}/skills`} exact className=\"btn edu-btn edu-bt3\">\r\n                                    <FontAwesomeIcon icon={faStar} />&nbsp;SKILLS</NavLink>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-9 col-sm-12 col-xs-12\">\r\n                            <div className=\"can-education\">\r\n                                <Switch>\r\n                                    <Route exact path={`${match.path}`} component={Education} />\r\n\r\n                                    <Route exact path={`${match.path}/experience`} component={Experience} />\r\n\r\n                                    <Route exact path={`${match.path}/skills`} component={Skills} />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default EduExpSkill;\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faClock, faCogs } from '@fortawesome/free-solid-svg-icons'\r\nimport thumb from '../right/thumb.png'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport MyContext from '../../../store/MyContext'\r\n// import Spinner from '../../UI/Spinner/Spinner'\r\nimport getImageURL from '../getImageURL/getImageURL'\r\n\r\nexport default class Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            toggleModal: false,\r\n            selectModal: null,\r\n            loading: false,\r\n            imgs: {}\r\n        }\r\n    }\r\n\r\n    onOpenModal = id => {\r\n        this.setState({\r\n            toggleModal: true,\r\n            selectModal: id\r\n        })\r\n    }\r\n\r\n    onCloseModal = () => {\r\n        this.setState({\r\n            toggleModal: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // let portfolio = null;\r\n\r\n\r\n        // if(this.state.loading){\r\n        //     portfolio = <Spinner />\r\n        // }\r\n        return (\r\n            <MyContext.Consumer>\r\n                {context => (\r\n                    <React.Fragment>\r\n                        <div className=\"about\" style={{ overflow: \"auto\", backgroundColor: 'transparent' }} >\r\n                            <h1>\r\n                                MY{' '}<span>PORTFOLIO</span>\r\n                            </h1>\r\n                            <hr style={{ width: \"200px\" }} />\r\n                            {Object.keys(context.Portfolio).map((item, id) => (\r\n                                <div key={id} className=\"card\" style={{ marginBottom: \"15px\", boxShadow: \"0 5px 11px #ccc\" }}>\r\n                                    <div className=\"card-header\" style={{ paddingBottom: 0, paddingTop: \"5px\" }}>\r\n                                        <h5>{context.Portfolio[item].projectName}</h5>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <div className=\"project-img\">\r\n                                                    <img src={!(context.Portfolio[item].image) ? thumb : (getImageURL(context.Portfolio[item].image))}\r\n                                                        id={context.Portfolio[item].image}\r\n                                                        alt=\"\"\r\n                                                        className=\"img-thumbnail\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-md-6\">\r\n                                                <table>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                <p>\r\n                                                                    <FontAwesomeIcon icon={faUser} />&nbsp;<b>Client: {context.Portfolio[item].client}</b>\r\n                                                                </p>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                <p>\r\n                                                                    <FontAwesomeIcon icon={faClock} /><b> Duration: {context.Portfolio[item].duration}</b>\r\n                                                                </p>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                <p>\r\n                                                                    <FontAwesomeIcon icon={faCogs} /><b> Technologies: {context.Portfolio[item].technology}</b>\r\n                                                                </p>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td>\r\n                                                                <div className=\"port-btn\" style={{ textAlign: \"right\" }}>\r\n                                                                    <Button className=\"btn btn1\" onClick={() => this.onOpenModal(id)} style={{ backgroundColor: \"#000\", color: '#fff' }} >Preview</Button>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <Modal isOpen={this.state.selectModal === id && this.state.toggleModal}\r\n                                        toggle={this.toggleModal} style={{ top: \"30%\", transform: \"translate(0%, -5%)\" }}>\r\n                                        <ModalHeader className=\"justify-content-center\"\r\n                                            style={{ backgroundColor: '#dee2e6' }}\r\n                                            toggle={this.toggleModal}>{context.Portfolio[item].projectName}\r\n                                        </ModalHeader>\r\n                                        <ModalBody style={{ backgroundColor: '#dee2e6' }}>\r\n                                            <h5>Project Description: </h5>\r\n                                            {context.Portfolio[item].description}\r\n                                        </ModalBody>\r\n                                        <ModalFooter style={{ backgroundColor: '#dee2e6' }}>\r\n                                            <a className=\"btn btn1\" href={context.Portfolio[item].siteUrl}>Goto Site</a>{' '}\r\n                                            <Button color=\"secondary\" onClick={this.onCloseModal}>Cancel</Button>\r\n                                        </ModalFooter>\r\n                                    </Modal>\r\n\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n            </MyContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { SocialIcon } from 'react-social-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../store/MyContext'\r\n\r\nconst Links = () => (\r\n    <MyContext.Consumer>\r\n        {context => (\r\n            <React.Fragment>\r\n                <div className=\"mylinks\" >\r\n                    <div className=\"card\" style={{ boxShadow: \"0 5px 11px #ccc\" }}>\r\n                        <div className=\"card-header mylink-header\">\r\n                            <FontAwesomeIcon icon={faLink} />{' '}LINKS</div>\r\n                        <div className=\"card-body\" style={{ textAlign: 'center', paddingTop: '50px' }}>\r\n                            {Object.keys(context.Links).map(item => (\r\n                                <span key={item}>\r\n                                    <SocialIcon url={context.Links[item].siteUrl} />{' '}\r\n                                </span>\r\n                            )\r\n                            )}\r\n                            <br /><br />\r\n                            <hr style={{ width: '150px' }}></hr>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )}\r\n    </MyContext.Consumer>\r\n\r\n)\r\n\r\nexport default Links;\r\n","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEnvelopeOpen, faMapMarkerAlt, faMobileAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport MyContext from '../../../store/MyContext'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class ContactMe extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tooltipOpen: true,\r\n            errorMessage: '',\r\n            username: '',\r\n            email: '',\r\n            message: '',\r\n            subject: ''\r\n        }\r\n        this.refmsg = React.createRef()\r\n        this.refuser = React.createRef()\r\n        this.refemail = React.createRef()\r\n        this.refsub = React.createRef()\r\n    }\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        let err = ''\r\n        if (name === 'message' || name === 'username' || name === 'subject') {\r\n            if (value.length < 3) {\r\n                err = `Enter your ${name} with atleast 3 character`\r\n            }\r\n        }\r\n        this.setState({\r\n            errorMessage: err\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { username, email, message, subject } = this.state\r\n        if (message.length <= 3) {\r\n            this.refmsg.current.focus();\r\n            this.setState({\r\n                tooltipOpen: true\r\n            })\r\n        }\r\n        if (username.length < 3) {\r\n            this.refuser.current.focus();\r\n        }\r\n        if (!email) {\r\n            this.refemail.current.focus();\r\n        }\r\n        if (subject.length < 3) {\r\n            this.refsub.current.focus();\r\n        }\r\n        const urls = e.target.elements.urls.value\r\n\r\n        if (username.length >= 3 && email && message.length >= 3 && subject.length >= 3) {\r\n            fetch(`${urls}/contactus.json`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    \"username\": username,\r\n                    \"email\": email,\r\n                    \"message\": message,\r\n                    \"subject\": subject\r\n                })\r\n            }).then(res => {\r\n                if (res.status === 200) {\r\n                    this.setState({\r\n                        username: '',\r\n                        email: '',\r\n                        message: '',\r\n                        subject: ''\r\n                    })\r\n                    Swal.fire(\r\n                        'Message Sent! Will Contact you soon',\r\n                        ' ',\r\n                        'success'\r\n                    )\r\n                }\r\n            })\r\n        } else {\r\n            Swal.fire('Please fill fields with atleast 3 characters')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => this.setState({ success: false }), 5000)\r\n    }\r\n\r\n    render() {\r\n        // var alertMsg = null;\r\n        // if (this.state.success) {\r\n        //     alertMsg = (\r\n        //         <div className=\"alert alert-success my-3\">\r\n        //             <strong> Message sent! Thank you, will contact you soon! </strong>\r\n        //         </div>)\r\n        // }\r\n        const { username, email, message, subject } = this.state\r\n\r\n        return (\r\n            <MyContext.Consumer>\r\n                {context => (\r\n                    <React.Fragment>\r\n                        <div className=\"contact\" style={{ overflow: 'auto' }}>\r\n                            <div className=\"card\" style={{ boxShadow: \"0 5px 11px #ccc\" }} >\r\n                                <div className=\"card-header\"><FontAwesomeIcon icon={faEnvelopeOpen} />{' '}CONTACT ME</div>\r\n                                <div className=\"card-body\" style={{ background: '#e9ecef' }}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-8\">\r\n                                            <div className=\"contact-form\">\r\n                                                <form onSubmit={this.handleSubmit} id=\"post\">\r\n                                                    <textarea name=\"message\" id=\"message\" cols=\"50\" rows=\"5\" maxlength=\"300\" placeholder=\"Message\"\r\n                                                        className=\"form-control\" style={{ marginBottom: '10px' }} title=\"Maximum of 300 characters can use\"\r\n                                                        onChange={this.handleChange} ref={this.refmsg} value={message} />\r\n\r\n                                                    <input type=\"text\" title={this.state.errorMessage} name=\"username\" placeholder=\"Username\"\r\n                                                        className=\"form-control\" style={{ marginRight: \"4%\" }}\r\n                                                        onChange={this.handleChange} ref={this.refuser} value={username} />\r\n                                                    <input type=\"email\" name=\"email\" placeholder=\"Email\"\r\n                                                        className=\"form-control\" required id=\"contact-email\"\r\n                                                        onChange={this.handleChange} ref={this.refemail} value={email} />\r\n                                                    <div className=\"form-group\">\r\n                                                        <input type=\"text\" title={this.state.errorMessage} name=\"subject\" placeholder=\"Subject\"\r\n                                                            className=\"form-control\" required\r\n                                                            onChange={this.handleChange} ref={this.refsub} value={subject} />\r\n                                                    </div>\r\n                                                    <input type=\"hidden\" name=\"urls\" value={context.url} />\r\n                                                    <div className=\"form-sub port-btn\">\r\n                                                        <button type=\"submit\" className=\"btn btn1\" style={{ color: \"white\", backgroundColor: \"black\" }}>SEND MESSAGE</button>\r\n                                                    </div>\r\n                                                    <span></span>\r\n                                                </form>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4\">\r\n                                            <div className=\"address\">\r\n                                                <hr />\r\n                                                {Object.keys(context.Personal).map((item, id) =>\r\n                                                    (<span key={id}><p><FontAwesomeIcon icon={faMapMarkerAlt} />{' '}{context.Personal[item].address}</p>\r\n                                                        <p><FontAwesomeIcon icon={faEnvelopeOpen} />{' '}{context.Personal[item].email}</p>\r\n                                                        <p><FontAwesomeIcon icon={faMobileAlt} />{' '}{context.Personal[item].phone}</p></span>)\r\n                                                )}\r\n                                                <hr />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n            </MyContext.Consumer>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"container-sm pt-5\">\r\n                <h3 className=\"text-center pt-5\">Path Not Found!</h3>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Error;","import React, { Component } from 'react'\r\nimport { HashRouter as Router, Switch, Route, NavLink } from 'react-router-dom'\r\nimport './App.css';\r\nimport LeftPane from './components/layouts/left/LeftPane'\r\nimport Home from './components/layouts/right/Home'\r\nimport AboutMe from './components/layouts/right/AboutMe'\r\nimport EduExpSkill from './components/layouts/right/EduExpSkill'\r\nimport Portfolio from './components/layouts/right/Portfolio'\r\nimport Links from './components/layouts/right/Links'\r\nimport ContactMe from './components/layouts/right/ContactMe'\r\nimport Error from './components/Error'\r\nimport './Main.css'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBriefcase, faHome, faGraduationCap, faLink, faEnvelopeOpen } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"jumbotron\" style={{ padding: '30px -1px', marginBottom: \"unset\" }}>\r\n                    <span className='btn-group'>\r\n                        <NavLink className=\"btn bt bt1\" to=\"/\" exact><FontAwesomeIcon icon={faHome} /></NavLink>\r\n                        <NavLink className=\"btn bt bt2\" to=\"/eduskill\"><FontAwesomeIcon icon={faGraduationCap} /></NavLink>\r\n                        <NavLink className=\"btn bt bt3\" to=\"/portfolio\"><FontAwesomeIcon icon={faBriefcase} /></NavLink>\r\n                        <NavLink className=\"btn bt bt4\" to=\"/links\"><FontAwesomeIcon icon={faLink} /></NavLink>\r\n                        <NavLink className=\"btn bt bt5\" to=\"/contact\"><FontAwesomeIcon icon={faEnvelopeOpen} /></NavLink>\r\n                    </span>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                            <LeftPane />\r\n                        </div>\r\n                        <div className=\"col-lg-9 col-md-9 col-sm-12\">\r\n                            <div className=\"container\" style={{ padding: '5px' }}>\r\n                                <div className=\"card\" style={CardColor}>\r\n                                    <div className=\"card-header app-header\" style={CardhColor}>\r\n                                        <Switch>\r\n                                            <Route exact path='/' component={Home} />\r\n\r\n                                            <Route exact path=\"/about\" component={AboutMe} />\r\n\r\n                                            <Route exact path=\"/portfolio\" component={Portfolio} />\r\n\r\n                                            <Route exact path=\"/links\" component={Links} />\r\n\r\n                                            <Route exact path=\"/contact\" component={ContactMe} />\r\n\r\n                                            <Route path=\"/eduskill\" component={EduExpSkill} />\r\n\r\n                                            <Route component={Error} />\r\n                                        </Switch>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nconst CardColor = {\r\n    backgroundColor: 'transparent',\r\n    border: '1px solid #fff'\r\n}\r\nconst CardhColor = {\r\n    backgroundColor: 'transparent',\r\n    borderBottom: 'Unset'\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { signInWithGoogle } from '../../../firebase/firebase'\r\nimport './login.scss'\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        const { errorMessage } = this.props\r\n        let error = null\r\n        if (errorMessage) {\r\n            error = <span style={{ color: 'red' }}>{errorMessage}</span>\r\n        }\r\n        return (\r\n            <div className=\"login-dark\">\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                    <h2 className=\"sr-only\">Login Form</h2>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            type=\"email\" name=\"email\"\r\n                            placeholder=\"Email\" required\r\n                            onChange={this.props.handleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\"\r\n                            type=\"password\" name=\"password\"\r\n                            placeholder=\"Password\" required\r\n                            onChange={this.props.handleChange} />\r\n                        {error}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\"\r\n                            type=\"submit\">Sign In</button>\r\n\r\n                        {/* google signin button is added for optional but hidded*/}\r\n                        <button className=\"btn btn-primary btn-block\" style={{ display: 'none' }}\r\n                            onClick={signInWithGoogle}>Sign In with Google</button>\r\n                    </div>\r\n                    <Link className=\"forgot\" to=\"/admin\">Forgot your email or password?</Link>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\n\r\nimport './button.scss'\r\n\r\nconst Button = ({ type = 'button', value, onclick }) => (\r\n    <input type={type}\r\n        className=\"button\"\r\n        value={value}\r\n        onClick={onclick} />\r\n)\r\n\r\nexport default Button;","import React from 'react'\r\n\r\nimport './form-input.scss'\r\n\r\nconst FormInput = ({ name, placeholder, handleChange, value }) => {\r\n    let str = placeholder.split(/(?=[A-Z])/).join(' ').slice(1)\r\n    let modifiedStr = placeholder.charAt(0).toUpperCase() + str\r\n\r\n    var types = 'text'\r\n    if (name === 'email') {\r\n        types = 'email'\r\n    }\r\n\r\n    var input = <input type={types}\r\n        placeholder={modifiedStr}\r\n        name={name}\r\n        value={value}\r\n        className=\"form-control formcontrol\"\r\n        onChange={handleChange}\r\n        title={`Select Your ${name}`}\r\n    />\r\n    if (name === 'address' || name === 'summary') {\r\n        input = <textarea placeholder={modifiedStr} value={value}\r\n            className=\"form-control textarea\" onChange={handleChange}\r\n            name={name} rows=\"4\" cols=\"50\" title={`Select Your ${name}`} />\r\n    }\r\n\r\n    var label = !value\r\n        ? (<div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">{modifiedStr}</span>\r\n        </div>) : ''\r\n\r\n    if (name === 'image' || name === 'resume') {\r\n        input = <div className=\"input-group mb-3\">\r\n            {label}\r\n            <div className=\"custom-file\">\r\n                <input type=\"file\" className=\"custom-file-input\"\r\n                    name={name} id=\"inputGroupFile01\"\r\n                    onChange={handleChange} title={`Select Your ${name}`} />\r\n                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\"></label>\r\n            </div>\r\n        </div>\r\n    }\r\n    if (name === 'birthDate' || name === 'createdOn' || name === 'joined') {\r\n        input = <div className=\"input-group mb-3\">\r\n            {label}\r\n            <div className=\"custom-file\">\r\n                <input type=\"date\" className=\"custom-file-input\"\r\n                    name={name} id=\"inputGroupFile2\"\r\n                    onChange={handleChange}\r\n                    title={`Select Your ${name}`} />\r\n                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile2\"></label>\r\n            </div>\r\n        </div>\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {input}\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default FormInput;","import React, { Component } from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport FormInput from '../form-input/form-input'\r\nimport Button from '../button/button'\r\nimport { database, storage } from '../../../../firebase/firebase'\r\nimport Swal from 'sweetalert2'\r\n\r\nclass EditModal extends Component {\r\n    state = {\r\n        record: {},\r\n        modal: true,\r\n        image: null,\r\n        resume: null,\r\n        imageName: '',  //this variable used to create dynamic image name\r\n        resumeName: ''  //this variable used to create dynamic image name\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            record: this.props.singleData\r\n        })\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n    handleChange = e => {\r\n        var { name, value } = e.target\r\n        if ((name === 'image' || name === 'resume') && e.target.files[0]) {\r\n            value = e.target.files[0]\r\n            const d = new Date()\r\n            const dynamicDate = d.getTime()\r\n            var imageName = '';\r\n            var resumeName = '';\r\n            if (name === 'image') {\r\n                imageName = dynamicDate + e.target.files[0].name\r\n                this.setState({ imageName })\r\n            }\r\n            if (name === 'resume') {\r\n                resumeName = dynamicDate + e.target.files[0].name\r\n                this.setState({ resumeName })\r\n            }\r\n            this.setState({\r\n                [name]: value    //keeping state to use for submission of files\r\n            })\r\n            value = dynamicDate + e.target.files[0].name\r\n        }\r\n\r\n        this.setState({\r\n            record: { ...this.state.record, [name]: value }\r\n        })\r\n    }\r\n    handleSubmit = (category, editKey, imgKey, e) => {\r\n        e.preventDefault()\r\n        const inputs = document.querySelectorAll(`#${category}2 input`)\r\n        var valid = false\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            if (inputs[i].value === '') {\r\n                valid = false\r\n                break;\r\n            } else {\r\n                valid = true\r\n            }\r\n        }\r\n        const { record } = this.state\r\n        if (record && valid) {\r\n            const { image, resume, imageName, resumeName } = this.state\r\n\r\n            if (image) {\r\n                storage\r\n                    .ref(`images/${imageName}`)\r\n                    .put(image)\r\n                    .then(res => {\r\n                        storage.ref(`images/${imgKey['image']}`).delete()\r\n                    })\r\n            }\r\n            if (resume) {\r\n                storage\r\n                    .ref(`resumes/${resumeName}`)\r\n                    .put(resume)\r\n                    .then(res => {\r\n                        storage.ref(`resumes/${imgKey['resume']}`).delete()\r\n                    })\r\n            }\r\n\r\n            Swal.fire({\r\n                title: 'Your Data is Updating on Server...',\r\n                html: 'Wait for moment',\r\n                timerProgressBar: true,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading()\r\n                }\r\n            })\r\n            database\r\n                .ref(category + '/' + editKey)\r\n                .update(record)\r\n                .then((res) => {\r\n                    this.setState({ record: {}, modal: !this.state.modal })\r\n                    Swal.close()\r\n                })\r\n        } else {\r\n            Swal.fire('Please fill all fields')\r\n        }\r\n    }\r\n    render() {\r\n        var { editItem, editKey, imgKey } = this.props\r\n        editItem = editItem.toString()\r\n        if (!editItem) {\r\n            editItem = 'Personal'\r\n        }\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.modal} >\r\n                    <ModalHeader toggle={this.toggle} style={{ color: '#fff', padding: '10px 10px 10px 18px', borderBottomColor: '#283054' }}>\r\n                        {editItem}\r\n                    </ModalHeader>\r\n                    <form onSubmit={(e) => this.handleSubmit(editItem, editKey, imgKey, e)}\r\n                        id={`${editItem}2`} >\r\n                        <ModalBody style={{ maxHeight: \"77vh\", overflow: 'auto' }}>\r\n                            <div className={`data-form-inner ${editItem}`} >\r\n                                {Object.entries(this.state.record).map(([key, value]) => (\r\n                                    (key !== 'image' || key !== 'resume' || key !== 'birthData' || key !== 'createdOn' || key !== 'joined')\r\n                                        ? (<React.Fragment key={`${editItem}_${key}`}>\r\n                                            <label style={{ display: \"block\" }}>{key.charAt(0).toUpperCase() + key.split(/(?=[A-Z])/).join(' ').slice(1)}</label>\r\n                                            <FormInput\r\n                                                name={key}\r\n                                                value={value}\r\n                                                placeholder={key}\r\n                                                handleChange={(e) => this.handleChange(e)} />\r\n                                        </React.Fragment>)\r\n                                        : (<React.Fragment>\r\n                                            <label style={{ display: \"block\" }}>{key}</label>\r\n                                            <FormInput key={`${editItem}_${key}`}\r\n                                                name={key}\r\n                                                placeholder={key}\r\n                                                handleChange={(e) => this.handleChange(e)} />\r\n                                        </React.Fragment>)\r\n\r\n                                ))\r\n                                }\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter style={{ borderTopColor: '#283054' }}>\r\n                            <Button value=\"Submit\" type=\"submit\" />{' '}\r\n                            <Button value=\"Cancel\" onclick={this.toggle} />\r\n                        </ModalFooter>\r\n                    </form>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default EditModal;\r\n\r\n","import React from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport Swal from 'sweetalert2'\r\nimport './show_modal.scss'\r\nimport SortedFields from '../form-fields/sorted-fields.json'\r\nimport { database, storage } from '../../../../firebase/firebase'\r\nimport EditModal from './edit_modal'\r\nimport Button from '../button/button'\r\n\r\nclass ShowModel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editKey: '',\r\n            editItem: '',\r\n            imgKey: '',  //passed this img obj to edit modal to delete existing img\r\n            toggleEdit: false\r\n        }\r\n    }\r\n    handleDelete = (category, item, imgData) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                if (imgData['image']) {\r\n                    storage\r\n                        .ref(`images/${imgData['image']}`)\r\n                        .delete()\r\n                        .then((error) => {\r\n                            console.log(error)\r\n                        })\r\n                }\r\n                database.ref(category + '/' + item).remove()\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Your record has been deleted.',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n    }\r\n    handleEdit = (category, editKey, DataImage) => {\r\n        this.setState({\r\n            editItem: category,\r\n            editKey: editKey,\r\n            imgKey: DataImage,\r\n            toggleEdit: !this.state.toggleEdit\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { editItem, editKey } = this.state\r\n        var { itemKey, onOpenModal, data } = this.props\r\n        var category = itemKey.toString()\r\n        if (!itemKey) {\r\n            category = 'Personal'\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={onOpenModal} className=\"field-modal\">\r\n                    <ModalHeader className=\"justify-content-center field-modal-header\" id=\"\">\r\n                        {category.toUpperCase()}\r\n                        <div className=\"close\">\r\n                            <button type=\"button\" id=\"\" className=\"btn close-btn\" onClick={this.props.onCloseModal}>x</button>\r\n                        </div>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"field-modal-body\">\r\n                        <div className=\"table-responsive field-modal-body-div\" id=\"\">\r\n                            <table className=\"table table-striped\" >\r\n                                <thead>\r\n                                    <tr>\r\n                                        {SortedFields[category].map(item =>\r\n                                            <td key={item}><b>{item.toUpperCase()}</b></td>)}\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Object.keys(data[category]).map((item, id) => (\r\n                                        <tr key={item}>\r\n                                            {Object.keys(data[category][item]).map(it =>\r\n                                                <td key={it}>{data[category][item][it]}</td>\r\n                                            )}\r\n                                            <td>\r\n                                                <button className=\"btn btn-success\" onClick={() => this.handleEdit(category, item, data[category][item])}>Edit</button>\r\n                                            </td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-danger\" onClick={() => this.handleDelete(category, item, data[category][item])}>delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        {(this.state.toggleEdit)\r\n                            ? <EditModal\r\n                                singleData={data[editItem][editKey]}\r\n                                editKey={editKey}\r\n                                imgKey={this.state.imgKey}\r\n                                editItem={editItem} /> : null}\r\n                    </ModalBody>\r\n                    <ModalFooter style={{ backgroundColor: '#dee2e6', padding: 'unset' }}>\r\n                        <Button value=\"Close\" onclick={this.props.onCloseModal} />\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowModel;\r\n","import React, { Component } from 'react'\r\n\r\nimport Button from '../button/button'\r\nimport ShowModel from './show_model'\r\n\r\nclass DataList extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            Personal: {},\r\n            Portfolio: {},\r\n            Education: {},\r\n            Experience: {},\r\n            Skills: {},\r\n            Links: {},\r\n            url: 'https://react-porfolio.firebaseio.com',\r\n            itemKey: '',\r\n            onOpenModal: false\r\n        }\r\n    }\r\n    // componentDidMount() {\r\n    //     this.fetch_data()\r\n    // }\r\n    componentDidUpdate() {\r\n        this.fetch_data()\r\n    }\r\n    async fetch_data() {\r\n\r\n        const urls = [\r\n            'Personal',\r\n            'Portfolio',\r\n            'Links',\r\n            'Education',\r\n            'Experience',\r\n            'Skills',\r\n        ]\r\n        try {\r\n            const [Personal, Portfolio, Links, Education, Experience, Skills] = await Promise.all(urls.map(url =>\r\n                fetch(`${this.state.url}/${url}.json`).then(res => res.json())\r\n            ))\r\n\r\n            this.setState({\r\n                Personal,\r\n                Portfolio,\r\n                Links,\r\n                Education,\r\n                Experience,\r\n                Skills\r\n            })\r\n        } catch (error) {\r\n            this.setState({ error })\r\n        }\r\n\r\n    }\r\n    handleShow = (itemKey) => {\r\n        this.setState({ itemKey, onOpenModal: true })\r\n    }\r\n    onCloseModal = () => {\r\n        this.setState({\r\n            onOpenModal: false,\r\n            itemKey: ''\r\n        })\r\n    }\r\n    render() {\r\n        const { onOpenModal, itemKey } = this.state\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Button value=\"Show\" onclick={() => this.handleShow(this.props.itemKey)} />{'  '}\r\n\r\n                {onOpenModal\r\n                    ? <ShowModel\r\n                        onOpenModal={onOpenModal}\r\n                        onCloseModal={this.onCloseModal}\r\n                        handleEdit={this.props.handleEdit}\r\n                        itemKey={itemKey} data={this.state} />\r\n                    : null}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataList;","import React from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport Swal from 'sweetalert2'\r\nimport { database } from '../../../../firebase/firebase'\r\nimport Button from '../button/button'\r\n\r\nclass ShowMessageModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            messages: {},\r\n            url: 'https://react-porfolio.firebaseio.com'\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            messages: this.props.messages\r\n        })\r\n    }\r\n    componentDidUpdate() {\r\n        this.showMessages()\r\n    }\r\n\r\n    showMessages() {\r\n        fetch(`${this.state.url}/contactus.json`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    messages: data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#d33',\r\n            cancelButtonColor: '#3085d6',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                database\r\n                    .ref('contactus/' + key)\r\n                    .remove()\r\n                    .then(() => {\r\n                        Swal.fire(\r\n                            'Deleted!',\r\n                            'Message has been deleted.',\r\n                            'success'\r\n                        )\r\n                    })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { messages } = this.state\r\n        const { showMessageModal, hideMessageModal } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <Modal isOpen={showMessageModal} className=\"field-modal\">\r\n                    <ModalHeader className=\"justify-content-center field-modal-header\" id=\"\">\r\n                        Contacts\r\n                        <div className=\"close\">\r\n                            <button type=\"button\" id=\"\" className=\"btn close-btn\" onClick={this.props.hideMessageModal}>x</button>\r\n                        </div>\r\n                    </ModalHeader>\r\n                    <ModalBody className=\"field-modal-body\">\r\n                        <div className=\"table-responsive field-modal-body-div\" id=\"\">\r\n                            <table className=\"table table-striped\" >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td><b>Email</b></td>\r\n                                        <td><b>Message</b></td>\r\n                                        <td><b>Subject</b></td>\r\n                                        <td><b>User</b></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {Object.keys(messages).map((item, id) => (\r\n                                        <tr key={item}>\r\n                                            {Object.keys(messages[item]).map(it =>\r\n                                                <td key={it}>{messages[item][it]}</td>\r\n                                            )}\r\n                                            <td>\r\n                                                <button className=\"btn btn-danger\" onClick={() => this.handleDelete(item)}>delete</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter style={{ backgroundColor: '#dee2e6', padding: 'unset' }}>\r\n                        <Button value=\"Close\" onclick={hideMessageModal} />\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShowMessageModal;\r\n","import React from 'react'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport Swal from 'sweetalert2'\r\nimport Button from './button/button'\r\nimport FormInput from './form-input/form-input'\r\nimport DataList from './data_list/data_list'\r\nimport './data_entry.scss'\r\nimport FormFields from './form-fields/form-fields.json'\r\nimport { auth, storage } from '../../../firebase/firebase'\r\nimport { database } from '../../../firebase/firebase'\r\nimport ShowMessageModal from './showMessageModal/showMessageModal'\r\n\r\nclass DataEntry extends React.Component {\r\n    state = {\r\n        Personal: {},\r\n        Portfolio: {},\r\n        Education: {},\r\n        Experience: {},\r\n        Links: {},\r\n        Skills: {},\r\n        messages: {},\r\n        url: 'https://react-porfolio.firebaseio.com',\r\n        showMessageModal: false,\r\n        image: null,    //this object used to upload image\r\n        resume: null,   //this object used to upload file\r\n        imageName: '',  //this variable used to create dynamic image name\r\n        resumeName: ''  //this variable used to create dynamic image name\r\n\r\n    }\r\n    handleChange(sectionName, e) {\r\n        var { name, value } = e.target\r\n\r\n        if ((name === 'image' || name === 'resume') && e.target.files[0]) {\r\n            value = e.target.files[0]\r\n            const d = new Date()\r\n            const dynamicDate = d.getTime()\r\n            var imageName = '';\r\n            var resumeName = '';\r\n            if (name === 'image') {\r\n                imageName = dynamicDate + e.target.files[0].name\r\n                this.setState({ imageName })\r\n            }\r\n            if (name === 'resume') {\r\n                resumeName = dynamicDate + e.target.files[0].name\r\n                this.setState({ resumeName })\r\n            }\r\n            this.setState({\r\n                [name]: value   //keeping state to use for submission of files\r\n            })\r\n            value = dynamicDate + e.target.files[0].name\r\n        }\r\n        if (sectionName in this.state) {\r\n            const ObjOfState = this.state[sectionName]\r\n            ObjOfState[name] = value\r\n\r\n            this.setState({\r\n                [sectionName]: ObjOfState\r\n            })\r\n        }\r\n    }\r\n    handleSubmit(sectionName, e) {\r\n        e.preventDefault()\r\n        const inputs = document.querySelectorAll(`#${sectionName} input`)\r\n        var valid = false\r\n        for (let i = 0; i < inputs.length; i++) {\r\n\r\n            if (inputs[i].value === '') {\r\n                valid = false\r\n                break;\r\n            } else {\r\n                valid = true\r\n            }\r\n\r\n        }\r\n        if (!valid) {\r\n            Swal.fire('Please fill all fields')\r\n        } else {\r\n            //for Personal data to check whether it exists\r\n            var PersonalData_exits;\r\n            if (sectionName === 'Personal') {\r\n                database.ref(`Personal`).limitToFirst(1).once(\"value\", snapshot => {\r\n                    if (snapshot.exists()) {\r\n                        PersonalData_exits = true;\r\n                        Swal.fire('Data Exists! Only one record is allowed, please update data')\r\n                        this.setState({\r\n                            [sectionName]: {}\r\n                        })\r\n                        document.getElementById(sectionName.toString()).reset()\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            if ((sectionName === 'Personal' && PersonalData_exits) || sectionName !== 'Personal') {\r\n                const { image, resume, imageName, resumeName } = this.state\r\n                if (image) {\r\n                    storage.ref(`images/${imageName}`).put(image)\r\n                }\r\n                if (resume) {\r\n                    storage.ref(`resumes/${resumeName}`).put(resume)\r\n                }\r\n\r\n                Swal.fire({\r\n                    title: 'Data is Saving on Server...',\r\n                    html: 'Wait for moment',\r\n                    timerProgressBar: true,\r\n                    onBeforeOpen: () => {\r\n                        Swal.showLoading()\r\n                    }\r\n                })\r\n\r\n\r\n                if (sectionName in this.state) {\r\n                    var ObjOfState = this.state[sectionName]\r\n\r\n                    fetch(`https://react-porfolio.firebaseio.com/${sectionName}.json`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(ObjOfState)\r\n                    }).then(res => {\r\n                        if (res.status === 200) {\r\n                            this.setState({\r\n                                [sectionName]: {}\r\n                            })\r\n                            document.getElementById(sectionName.toString()).reset()\r\n                            Swal.close()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    showMessages() {\r\n        fetch(`${this.state.url}/contactus.json`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    messages: data,\r\n                    showMessageModal: true\r\n                })\r\n            })\r\n    }\r\n    hideMessageModal = () => {\r\n        this.setState({\r\n            showMessageModal: false\r\n        })\r\n    }\r\n    reset = (item, e) => {\r\n        document.getElementById(item.toString()).reset()\r\n    }\r\n    resetAll = (items, e) => {\r\n        items.map(item => document.getElementById(item.toString()).reset())\r\n    }\r\n\r\n    render() {\r\n        const { showMessageModal, messages } = this.state\r\n        return (\r\n            <div className=\"container-fluid data-container\">\r\n                <div className=\"data-form\">\r\n                    <div className=\"form-scroll\">\r\n                        <div className=\"signOut-div\">\r\n                            <Button value=\"Messages\"\r\n                                onclick={() => this.showMessages()} />{' '}\r\n                            <Button value={`${this.props.currentUser.email}(Sign Out)`}\r\n                                onclick={() => auth.signOut()} />\r\n                        </div>\r\n                        <Carousel ref={ref => (this.carousel = ref)} >\r\n                            {Object.keys(FormFields).map((item, id) => (\r\n                                <div className=\"scroller\" key={id}>\r\n                                    <div className=\"data-form-inner data-form-inner-top\" >\r\n                                        <div className=\"left-btn\">\r\n                                            <Button value=\"<\" onclick={() => this.carousel.slidePrev()} />\r\n                                        </div>\r\n                                        <div className=\"center-btn\">\r\n                                            <DataList itemKey={item} handleEdit={this.handleEdit} />{'  '}\r\n                                            <Button value=\"Reset\" onclick={(e) => this.reset(item, e)} />{'  '}\r\n                                            <Button value=\"Reset All\" onclick={(e) => this.resetAll(Object.keys(FormFields), e)} />\r\n                                        </div>\r\n                                        <div className=\"right-btn\">\r\n                                            <Button value=\">\" onclick={() => this.carousel.slideNext()} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`data-form-inner ${item}`} >\r\n                                        <form onSubmit={(e) => this.handleSubmit(item, e)}\r\n                                            id={item} ref='myform'>\r\n                                            <h1 className=\"header\">{item}</h1>\r\n                                            {FormFields[item].map((formfield) => (\r\n                                                <FormInput\r\n                                                    key={formfield}\r\n                                                    name={formfield}\r\n                                                    placeholder={formfield}\r\n                                                    handleChange={(e) => this.handleChange(item, e)} />\r\n\r\n                                            ))}\r\n                                            <div className=\"form-btn\">\r\n                                                <Button value=\"Submit\" type=\"submit\" />\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </Carousel>\r\n                        {showMessageModal\r\n                            ? <ShowMessageModal\r\n                                showMessageModal={showMessageModal}\r\n                                hideMessageModal={this.hideMessageModal}\r\n                                messages={messages}\r\n                            />\r\n                            : null}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataEntry","import React, { Component } from 'react'\r\nimport Login from './login/login'\r\nimport DataEntry from './data_entry/data_entry'\r\nimport { auth } from '../../firebase/firebase'\r\n\r\nclass Admin extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            currentUser: null,\r\n            email: '',\r\n            password: '',\r\n            errorMessage: ''\r\n        }\r\n    }\r\n    handleFields = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit = async event => {\r\n        event.preventDefault()\r\n\r\n        const { email, password } = this.state\r\n        if (email && password) {\r\n            try {\r\n                await auth.signInWithEmailAndPassword(email, password)\r\n                this.setState({\r\n                    email: '',\r\n                    password: '',\r\n                    errorMessage: ''\r\n                })\r\n            } catch (error) {\r\n                console.log(error)\r\n                this.setState({\r\n                    errorMessage: error.message\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                errorMessage: 'Please provide valid email and password'\r\n            })\r\n        }\r\n    }\r\n\r\n    unsubscribeFromAuth = null\r\n\r\n    componentDidMount() {\r\n        this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\r\n            this.setState({\r\n                currentUser: user\r\n            })\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this.unsubscribeFromAuth();\r\n    }\r\n    render() {\r\n        const { currentUser, errorMessage } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                {currentUser\r\n                    ? (<DataEntry currentUser={currentUser} />)\r\n\r\n                    : (<Login currentUser={currentUser}\r\n                        handleChange={this.handleFields}\r\n                        handleSubmit={this.handleSubmit}\r\n                        errorMessage={errorMessage} />)\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component } from 'react'\r\nimport MyContext from './MyContext'\r\n\r\nexport default class GlobalStore extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            Personal: {},\r\n            Portfolio: {},\r\n            Links: {},\r\n            Education: {},\r\n            Experience: {},\r\n            Skills: {},\r\n            url: 'https://react-porfolio.firebaseio.com',\r\n            error: false\r\n        }\r\n        this.fetch_data = this.fetch_data.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch_data()\r\n    }\r\n\r\n    async fetch_data() {\r\n\r\n        const urls = [\r\n            'Personal',\r\n            'Portfolio',\r\n            'Links',\r\n            'Education',\r\n            'Experience',\r\n            'Skills',\r\n        ]\r\n        try {\r\n            const [Personal, Portfolio, Links, Education, Experience, Skills] = await Promise.all(urls.map(url =>\r\n                fetch(`${this.state.url}/${url}.json`).then(res => res.json())\r\n            ))\r\n\r\n            this.setState({\r\n                Personal,\r\n                Portfolio,\r\n                Links,\r\n                Education,\r\n                Experience,\r\n                Skills\r\n            })\r\n        } catch (error) {\r\n            this.setState({ error })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MyContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport Main from './Main';\n\nimport Admin from './components/admin/admin';\nimport GlobalStore from './store/GlobalStore'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/admin\" component={Admin} />\n        <Route path=\"/\" component={\n          () => (\n            <GlobalStore>\n              <Main />\n            </GlobalStore>\n          )\n        } />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/thumb.88724383.png\";"],"sourceRoot":""}